{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dylan\\\\Projects\\\\GameFolder2\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dylan\\\\Projects\\\\GameFolder2\",\"filename\":\"C:\\\\Users\\\\Dylan\\\\Projects\\\\GameFolder2\\\\src\\\\game.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dylan\\\\Projects\\\\GameFolder2\",\"plugins\":[],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dylan\\Projects\\GameFolder2\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dylan\\Projects\\GameFolder2",
      "filename": "C:\\Users\\Dylan\\Projects\\GameFolder2\\src\\game.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dylan\\Projects\\GameFolder2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dylan\\Projects\\GameFolder2\\src\\game.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dylan\\Projects\\GameFolder2\\src\\game.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dylan\\Projects\\GameFolder2\\src",
        "sourceFileName": "game.js"
      }
    },
    "ast": null,
    "code": "class Observable {\n  constructor() {\n    this._listeners = [];\n  }\n\n  initProperties() {\n    for (let key of Object.keys(this)) {\n      const value = this[key];\n      if (['_listeners', 'dispatch'].includes(key)) continue;\n      Object.defineProperty(this, key, {\n        get: () => this[`_${key}`],\n        set: newValue => {\n          this[`_${key}`] = newValue;\n          this.dispatch();\n        }\n      });\n\n      if (value instanceof Observable) {\n        this[key].onChange(this.dispatch.bind(this));\n      }\n    }\n  } // onchange\n\n\n  onChange(listener) {\n    this._listeners.push(listener);\n  }\n\n  dispatch() {\n    for (let listener of this._listeners) {\n      if (typeof listener === 'function') listener(this);\n    }\n  }\n\n}\n\nclass Positionable extends Observable {\n  constructor(x, y) {\n    super();\n    this._x = x;\n    this._y = y;\n  }\n\n  setTile(x, y) {\n    this._x = x;\n    this._y = y;\n  }\n\n}\n\nclass Tile extends Positionable {\n  constructor(x, y) {\n    super(x, y);\n    this._hasPlayer = 0;\n  }\n\n  getPos() {\n    return [this._x, this._y];\n  }\n\n  isObstacle() {\n    if (this instanceof Obstacle) {\n      return true;\n    }\n  }\n\n  isEmpty() {\n    if (this instanceof EmptyTile) {\n      return true;\n    }\n  }\n\n  hasPlayer() {\n    for (let player of Game.players) {\n      if (this._x == player.char._x && this._y == player.char._y) {\n        return true;\n      }\n    }\n  }\n\n}\n\nclass EmptyTile extends Tile {\n  constructor(x, y) {\n    super(x, y);\n    this._type = 'Empty';\n    this._reachable = 1;\n    this._hasItem = [0];\n  }\n\n  set reachable(newVal) {\n    this._reachable = newVal;\n  }\n\n  get reachable() {\n    return this._reachable;\n  }\n\n}\n\nclass Escape extends Tile {\n  constructor(x, y) {\n    super(x, y);\n    this._type = 'Escape';\n  }\n\n}\n\nclass Obstacle extends Tile {\n  constructor(x, y) {\n    super(x, y);\n    this._type = 'Obstacle';\n    this._reachable = 0;\n  }\n\n}\n\nclass Barrel extends Obstacle {\n  constructor(x, y) {\n    super(x, y);\n    this._model = 'Barrel';\n  }\n\n}\n\nclass BarbedWire extends Obstacle {\n  constructor(x, y) {\n    super(x, y);\n    this._model = 'BarbedWire';\n  }\n\n}\n\nclass Woodbox extends Obstacle {\n  constructor(x, y) {\n    super(x, y);\n    this._model = 'Woodbox';\n  }\n\n}\n\nclass PlayerCase extends Obstacle {\n  constructor(x, y) {\n    super(x, y);\n    this._model = 'Barrel';\n  }\n\n}\n\nclass Board {\n  constructor(maxTiles) {\n    this.tiles = [];\n    this.lineOfTiles = Math.floor(Math.sqrt(maxTiles));\n\n    for (let y = 0; y < this.lineOfTiles; ++y) {\n      for (let x = 0; x < this.lineOfTiles; ++x) {\n        let randomTileGenerator = Math.random();\n\n        if (randomTileGenerator < 0.8) {\n          this.tiles.push(new EmptyTile(x, y));\n        } else {\n          let randomObstacleGenerator = Math.random();\n\n          if (randomObstacleGenerator < 0.33) {\n            this.tiles.push(new Barrel(x, y));\n          } else if (randomObstacleGenerator < 0.66) {\n            this.tiles.push(new BarbedWire(x, y));\n          } else if (randomObstacleGenerator <= 1) {\n            this.tiles.push(new Woodbox(x, y));\n          }\n        }\n      }\n    }\n  }\n\n  getTile(x, y) {\n    for (let elem of this.tiles) {\n      if (elem._x == x && elem._y == y) {\n        return elem;\n      }\n    }\n  }\n\n}\n\nclass Movable extends Positionable {\n  constructor(x, y) {\n    super(x, y);\n    this.steps = [];\n  }\n\n  move(x, y) {\n    console.info(this._x);\n    console.info(x);\n\n    if (this._x != x) {\n      this.movementPoint -= Math.abs(x - this._x);\n      console.log('PM :' + this.movementPoint);\n    } else if (this._y != y) {\n      this.movementPoint -= Math.abs(y - this._y);\n    }\n\n    this.setTile(x, y);\n  }\n\n} // Character superclass\n\n\nclass Character extends Movable {\n  constructor(x, y) {\n    super(x, y);\n    this._equipedItem = {};\n    this.initProperties();\n  }\n\n  get movementPoint() {\n    return this._movementPoint;\n  }\n\n  set movementPoint(newVal) {\n    this._movementPoint = newVal;\n  }\n\n  get equipedItem() {\n    return this._equipedItem;\n  }\n\n  set equipedItem(newVal) {\n    this._equipedItem = Game.items[newVal];\n  }\n\n  getTile() {\n    return this._x + this._y * Math.floor(Math.sqrt(Game.board.tiles.length));\n  }\n\n  setTile(x, y) {\n    if (this._x != undefined && this._y != undefined) Game.board.getTile(this._x, this._y)._hasPlayer = 0;\n    super.setTile(x, y);\n    let newTile = Game.board.getTile(x, y);\n    newTile._hasPlayer = 1;\n\n    if (newTile._hasItem[0] == 1) {\n      let item = Game.items[newTile._hasItem[1]];\n      const charType = [Survivor, Chaser];\n\n      if (this instanceof charType[item.targetChar - 1]) {\n        this.equipItem(newTile._hasItem[1]);\n        newTile._hasItem = [0];\n        console.info(this.equipedItem);\n      }\n    }\n  }\n\n  move(x, y) {\n    super.move(x, y);\n    this.setTile(x, y);\n  }\n\n  equipItem(newItem) {\n    this.equipedItem = newItem;\n  }\n\n}\n\nclass Survivor extends Character {\n  constructor(x, y) {\n    super(x, y);\n    this._movementPoint = 3;\n    this._equipedItem = {\n      name: 'Poings'\n    };\n    this._health = 100;\n  }\n\n}\n\nclass Chaser extends Character {\n  constructor(x, y) {\n    super(x, y);\n    this._movementPoint = 2;\n    this._equipedItem = {\n      name: 'Planche'\n    };\n  }\n\n} // Logic\n\n\nclass Player {\n  constructor(number, desiredChar) {\n    this.number = number;\n\n    if (desiredChar == 1) {\n      this.char = new Survivor(4, 3);\n    } else {\n      this.char = new Chaser(2, 1);\n    }\n  }\n\n}\n\nclass Item {\n  constructor(name, type, amount, targetChar) {\n    this.itemsType = ['Damage', 'Healing', 'Mover', 'Boost'];\n    this.name = name;\n    this.type = this.itemsType[type];\n    this.amount = amount;\n    this.targetChar = targetChar;\n\n    switch (type) {\n      case 0:\n        this.desc = `Occasionne ${this.amount} de dommages.`;\n        break;\n\n      case 1:\n        this.desc = `Soigne ${this.amount} de points de vie.`;\n        break;\n\n      case 2:\n        switch (targetChar) {\n          case 1:\n            this.desc = `Repousse de ${this.amount} case.`;\n            break;\n\n          case 2:\n            this.desc = `Attire de ${this.amount} case.`;\n            break;\n\n          default:\n            console.error('Le personnage ciblÃ© est incorrect');\n            break;\n        }\n\n        ;\n        break;\n\n      case 3:\n        this.desc = `Augmente de ${this.amount} les points de mouvement du personnage.`;\n        break;\n\n      default:\n        console.error('Le type d\\'item est incorrect');\n    }\n\n    ;\n\n    switch (targetChar) {\n      case 1:\n        this.descChar = `<span class='tooltiptext--survivor'>Pour Survivant.</span>`;\n        break;\n\n      case 2:\n        this.descChar = `<span class='tooltiptext--chaser'>Pour Chaser.</span>`;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n}\n\nclass GameManager {\n  constructor() {\n    this.players = [new Player(1, 1), new Player(2, 2)];\n    this.items = [new Item('Machette', 0, 20, 2), new Item('Hachoir', 0, 10, 2), new Item('Piege', 0, 15, 2), new Item('Grappin', 2, 1, 2), new Item('Skate', 3, 1, 1), new Item('Lance-pierre', 2, 1, 1), new Item('Bandages', 1, 10, 1)];\n    this.turn = 1;\n    this.totalTurn = 0;\n    this.board = new Board(49);\n    this.activePlayer = 0;\n  }\n\n  playerSpawn() {\n    for (let elem of this.players) {\n      let randomTile = Math.floor(Math.random() * this.board.tiles.length);\n\n      while (this.board.tiles[randomTile].reachable === 0 || this.board.tiles[randomTile] instanceof Obstacle) {\n        randomTile = Math.floor(Math.random() * this.board.tiles.length);\n      }\n\n      console.info(this.board.tiles[randomTile].reachable);\n      elem.char.setTile(this.board.tiles[randomTile].getPos()[0], this.board.tiles[randomTile].getPos()[1]);\n      this.board.tiles[randomTile].reachable = 0;\n    }\n  }\n\n  itemSpawn() {\n    for (let i = 0; i < 8; ++i) {\n      let randomTile = Math.floor(Math.random() * this.board.tiles.length);\n\n      while (this.board.tiles[randomTile] instanceof Obstacle) {\n        randomTile = Math.floor(Math.random() * this.board.tiles.length);\n      }\n\n      while (this.board.tiles[randomTile]._hasPlayer == 1) {\n        randomTile = Math.floor(Math.random() * this.board.tiles.length);\n      }\n\n      let randomItem = Math.floor(Math.random() * this.items.length);\n      this.board.tiles[randomTile]._hasItem = [1, randomItem];\n    }\n  }\n\n  nextTurn() {\n    // TODO select first player based on character\n    // set active player each turn\n    // first player is the one with Adam\n    this.turn++;\n\n    if (this.turn % 2 == 0) {\n      this.totalTurn = turn / 2;\n    }\n  }\n\n  getPossibleMoves() {\n    this.removePossibleMoves();\n    let activePlayerChar = this.players[this.activePlayer].char;\n    this.possibleBottomMovesTiles = [];\n    this.possibleTopMovesTiles = [];\n    this.possibleLeftMovesTiles = [];\n    this.possibleRightMovesTiles = [];\n    this.possibleMovesIterator = [this.possibleBottomMovesTiles, this.possibleRightMovesTiles, this.possibleLeftMovesTiles, this.possibleTopMovesTiles];\n\n    for (let elem of this.possibleMovesIterator) {\n      for (let i = 1; i <= activePlayerChar.movementPoint; i++) {\n        if (elem[i - 1] instanceof Obstacle || elem[i - 2] instanceof Obstacle) continue;\n        if (elem[i - 1] instanceof EmptyTile && elem[i - 1]._hasPlayer == 1 || elem[i - 2] instanceof EmptyTile && elem[i - 2]._hasPlayer == 1) continue;\n\n        switch (elem) {\n          case this.possibleBottomMovesTiles:\n            elem[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y + i);\n            break;\n\n          case this.possibleTopMovesTiles:\n            elem[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y - i);\n            break;\n\n          case this.possibleLeftMovesTiles:\n            elem[i] = this.board.getTile(activePlayerChar._x - i, activePlayerChar._y);\n            break;\n\n          case this.possibleRightMovesTiles:\n            elem[i] = this.board.getTile(activePlayerChar._x + i, activePlayerChar._y);\n            break;\n        }\n      }\n    } // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\n    //     if( this.possibleBottomMovesTiles[i-1] instanceof Obstacle || this.possibleBottomMovesTiles[i-2] instanceof Obstacle)\n    //         continue;\n    //         this.possibleBottomMovesTiles[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y + i);\n    // }\n    // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\n    //     if( this.possibleTopMovesTiles[i-1] instanceof Obstacle || this.possibleTopMovesTiles[i-2] instanceof Obstacle)\n    //         continue;\n    //         this.possibleTopMovesTiles[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y - i);\n    // }\n    // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\n    //     if( this.possibleRightMovesTiles[i-1] instanceof Obstacle || this.possibleRightMovesTiles[i-2] instanceof Obstacle)\n    //         continue;\n    //         this.possibleRightMovesTiles[i] = this.board.getTile(activePlayerChar._x + i, activePlayerChar._y);\n    // }\n    // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\n    //     if( this.possibleLeftMovesTiles[i-1] instanceof Obstacle || this.possibleLeftMovesTiles[i-2] instanceof Obstacle)\n    //         continue;\n    //         this.possibleLeftMovesTiles[i] = this.board.getTile(activePlayerChar._x - i, activePlayerChar._y);\n    // }\n\n\n    this.possibleMovesTiles = [...this.possibleBottomMovesTiles, ...this.possibleLeftMovesTiles, ...this.possibleRightMovesTiles, ...this.possibleTopMovesTiles];\n\n    for (let tile of this.possibleMovesTiles) {\n      if (tile instanceof EmptyTile) if (tile._hasPlayer != 1) {\n        tile.reachable = 1;\n      }\n    }\n\n    ;\n  }\n\n  removePossibleMoves() {\n    for (let tile in this.board.tiles) {\n      if (this.board.tiles[tile].reachable == 1) {\n        this.board.tiles[tile].reachable = 0;\n      }\n    }\n  }\n\n}\n\nlet Game = new GameManager();\nexport { Game };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "game.js"
      ],
      "names": [
        "Observable",
        "constructor",
        "_listeners",
        "initProperties",
        "key",
        "Object",
        "keys",
        "value",
        "includes",
        "defineProperty",
        "get",
        "set",
        "newValue",
        "dispatch",
        "onChange",
        "bind",
        "listener",
        "push",
        "Positionable",
        "x",
        "y",
        "_x",
        "_y",
        "setTile",
        "Tile",
        "_hasPlayer",
        "getPos",
        "isObstacle",
        "Obstacle",
        "isEmpty",
        "EmptyTile",
        "hasPlayer",
        "player",
        "Game",
        "players",
        "char",
        "_type",
        "_reachable",
        "_hasItem",
        "reachable",
        "newVal",
        "Escape",
        "Barrel",
        "_model",
        "BarbedWire",
        "Woodbox",
        "PlayerCase",
        "Board",
        "maxTiles",
        "tiles",
        "lineOfTiles",
        "Math",
        "floor",
        "sqrt",
        "randomTileGenerator",
        "random",
        "randomObstacleGenerator",
        "getTile",
        "elem",
        "Movable",
        "steps",
        "move",
        "console",
        "info",
        "movementPoint",
        "abs",
        "log",
        "Character",
        "_equipedItem",
        "_movementPoint",
        "equipedItem",
        "items",
        "board",
        "length",
        "undefined",
        "newTile",
        "item",
        "charType",
        "Survivor",
        "Chaser",
        "targetChar",
        "equipItem",
        "newItem",
        "name",
        "_health",
        "Player",
        "number",
        "desiredChar",
        "Item",
        "type",
        "amount",
        "itemsType",
        "desc",
        "error",
        "descChar",
        "GameManager",
        "turn",
        "totalTurn",
        "activePlayer",
        "playerSpawn",
        "randomTile",
        "itemSpawn",
        "i",
        "randomItem",
        "nextTurn",
        "getPossibleMoves",
        "removePossibleMoves",
        "activePlayerChar",
        "possibleBottomMovesTiles",
        "possibleTopMovesTiles",
        "possibleLeftMovesTiles",
        "possibleRightMovesTiles",
        "possibleMovesIterator",
        "possibleMovesTiles",
        "tile"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Dylan\\Projects\\GameFolder2\\src",
      "sourcesContent": [
        "class Observable {\r\n    constructor() {\r\n        this._listeners = [];\r\n    }\r\n\r\n    initProperties() {\r\n        for (let key of Object.keys(this)) {\r\n            const value = this[key];\r\n            if (['_listeners', 'dispatch'].includes(key)) continue;\r\n            Object.defineProperty(this, key, {\r\n                get: () => this[`_${key}`],\r\n                set: (newValue) => {\r\n                    this[`_${key}`] = newValue;\r\n                    this.dispatch()\r\n                }\r\n            })\r\n\r\n            if (value instanceof Observable) {\r\n                this[key].onChange(this.dispatch.bind(this))\r\n            }\r\n        }\r\n    }\r\n\r\n    // onchange\r\n    onChange(listener) {\r\n        this._listeners.push(listener);\r\n    }\r\n\r\n    dispatch() {\r\n        for (let listener of this._listeners) {\r\n            if (typeof listener === 'function') listener(this)\r\n        }\r\n    }\r\n}\r\n\r\nclass Positionable extends Observable {\r\n    constructor(x, y) {\r\n        super();\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n    setTile(x, y) {\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Tile extends Positionable {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._hasPlayer = 0;\r\n    }\r\n\r\n    getPos() {\r\n        return [this._x, this._y];\r\n    }\r\n\r\n    isObstacle() {\r\n        if (this instanceof Obstacle) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    isEmpty() {\r\n        if (this instanceof EmptyTile) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    hasPlayer() {\r\n        for (let player of Game.players) {\r\n            if (this._x == player.char._x && this._y == player.char._y) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass EmptyTile extends Tile {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._type = 'Empty';\r\n        this._reachable = 1;\r\n        this._hasItem = [0];\r\n    }\r\n    set reachable(newVal) {\r\n        this._reachable = newVal;\r\n    }\r\n\r\n    get reachable() {\r\n        return this._reachable;\r\n    }\r\n}\r\n\r\nclass Escape extends Tile {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._type = 'Escape';\r\n    }\r\n}\r\n\r\nclass Obstacle extends Tile {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._type = 'Obstacle';\r\n        this._reachable = 0;\r\n    }\r\n}\r\n\r\nclass Barrel extends Obstacle {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._model = 'Barrel';\r\n    }\r\n}\r\nclass BarbedWire extends Obstacle {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._model = 'BarbedWire';\r\n\r\n    }\r\n}\r\nclass Woodbox extends Obstacle {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._model = 'Woodbox';\r\n\r\n    }\r\n}\r\n\r\nclass PlayerCase extends Obstacle {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._model = 'Barrel';\r\n\r\n    }\r\n}\r\n\r\n\r\nclass Board {\r\n    constructor(maxTiles) {\r\n        this.tiles = [];\r\n        this.lineOfTiles = Math.floor(Math.sqrt(maxTiles));\r\n        for (let y = 0; y < this.lineOfTiles; ++y) {\r\n            for (let x = 0; x < this.lineOfTiles; ++x) {\r\n                let randomTileGenerator = Math.random();\r\n                if (randomTileGenerator < 0.8) {\r\n                    this.tiles.push(new EmptyTile(x, y))\r\n                } else {\r\n                    let randomObstacleGenerator = Math.random();\r\n                    \r\n                    if (randomObstacleGenerator < 0.33) {\r\n                        this.tiles.push(new Barrel(x, y))\r\n                    } else if (randomObstacleGenerator < 0.66) {\r\n                        this.tiles.push(new BarbedWire(x, y))\r\n\r\n                    } else if (randomObstacleGenerator <= 1) {\r\n                        this.tiles.push(new Woodbox(x, y))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getTile(x, y) {\r\n        for (let elem of this.tiles) {\r\n            if (elem._x == x && elem._y == y) {\r\n                return elem;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nclass Movable extends Positionable {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this.steps = [];\r\n    }\r\n\r\n    move(x, y) {\r\n        console.info(this._x);\r\n        console.info(x);\r\n        if (this._x != x) {\r\n            this.movementPoint -= Math.abs((x - this._x));\r\n            console.log('PM :' + this.movementPoint);\r\n        } else if (this._y != y) {\r\n            this.movementPoint -= Math.abs((y - this._y));\r\n\r\n        }\r\n        this.setTile(x, y)\r\n    }\r\n\r\n}\r\n\r\n\r\n// Character superclass\r\n\r\nclass Character extends Movable {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._equipedItem = {}; \r\n        this.initProperties();\r\n    }\r\n\r\n    get movementPoint() {\r\n        return this._movementPoint\r\n    }\r\n    set movementPoint(newVal) {\r\n        this._movementPoint = newVal\r\n    }\r\n\r\n    get equipedItem() {\r\n        return this._equipedItem\r\n    }\r\n    set equipedItem(newVal) {\r\n        this._equipedItem = Game.items[newVal];\r\n    }\r\n\r\n    getTile() {\r\n        return this._x + (this._y * Math.floor(Math.sqrt(Game.board.tiles.length)));\r\n\r\n    }\r\n\r\n    setTile(x, y) {\r\n        if (this._x != undefined && this._y != undefined)\r\n            Game.board.getTile(this._x, this._y)._hasPlayer = 0;\r\n        super.setTile(x, y);\r\n        let newTile = Game.board.getTile(x, y);\r\n        newTile._hasPlayer = 1;\r\n        if(newTile._hasItem[0] == 1){\r\n            let item = Game.items[newTile._hasItem[1]];\r\n            const charType = [Survivor, Chaser];\r\n            if(this instanceof charType[item.targetChar - 1]){\r\n                this.equipItem(newTile._hasItem[1]);\r\n                newTile._hasItem = [0];\r\n                console.info(this.equipedItem);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    move(x, y) {\r\n        super.move(x, y);\r\n        this.setTile(x, y);\r\n    }\r\n\r\n    equipItem(newItem){\r\n        this.equipedItem = newItem;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nclass Survivor extends Character {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._movementPoint = 3;\r\n        this._equipedItem = {name: 'Poings'}; \r\n        this._health = 100;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nclass Chaser extends Character {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._movementPoint = 2;\r\n        this._equipedItem = {name: 'Planche'}; \r\n\r\n\r\n    }\r\n}\r\n\r\n// Logic\r\n\r\nclass Player {\r\n    constructor(number, desiredChar) {\r\n        this.number = number;\r\n        if (desiredChar == 1) {\r\n            this.char = new Survivor(4, 3);\r\n        } else {\r\n            this.char = new Chaser(2, 1);\r\n        }\r\n    }\r\n}\r\n\r\nclass Item {\r\n    constructor(name, type, amount, targetChar) {\r\n        this.itemsType = ['Damage', 'Healing', 'Mover', 'Boost'];\r\n        this.name = name;\r\n        this.type = this.itemsType[type];\r\n        this.amount = amount;\r\n        this.targetChar = targetChar;\r\n        switch (type) {\r\n            case 0:\r\n                this.desc = `Occasionne ${this.amount} de dommages.`;\r\n                break;\r\n            case 1:\r\n                this.desc = `Soigne ${this.amount} de points de vie.`;\r\n                break;\r\n            case 2:\r\n                switch (targetChar) {\r\n                    case 1:\r\n                        this.desc = `Repousse de ${this.amount} case.`;\r\n                        break;\r\n                    case 2:\r\n                        this.desc = `Attire de ${this.amount} case.`;\r\n                        break;\r\n                    default:\r\n                        console.error('Le personnage ciblÃ© est incorrect');\r\n                        break;\r\n                };\r\n                break;\r\n            case 3:\r\n                this.desc = `Augmente de ${this.amount} les points de mouvement du personnage.`\r\n                break;\r\n            default:\r\n                console.error('Le type d\\'item est incorrect');\r\n            };\r\n            switch(targetChar) {\r\n                case 1:\r\n                    this.descChar = `<span class='tooltiptext--survivor'>Pour Survivant.</span>`;\r\n                    break;\r\n                case 2:\r\n                    this.descChar = `<span class='tooltiptext--chaser'>Pour Chaser.</span>`;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n    }\r\n}\r\n\r\nclass GameManager {\r\n    constructor() {\r\n        this.players = [\r\n            new Player(1, 1), new Player(2, 2)\r\n        ];\r\n        this.items = [\r\n            new Item('Machette', 0, 20, 2),\r\n            new Item('Hachoir', 0, 10, 2),\r\n            new Item('Piege', 0, 15, 2),\r\n            new Item('Grappin', 2, 1, 2),\r\n            new Item('Skate', 3, 1, 1),\r\n            new Item('Lance-pierre', 2, 1, 1),\r\n            new Item('Bandages', 1, 10, 1),\r\n        ];\r\n        this.turn = 1;\r\n        this.totalTurn = 0;\r\n        this.board = new Board(49);\r\n        this.activePlayer = 0;\r\n        \r\n    }\r\n\r\n    playerSpawn() {\r\n        for (let elem of this.players) {\r\n            let randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n            while (this.board.tiles[randomTile].reachable === 0 || this.board.tiles[randomTile] instanceof Obstacle) {\r\n                randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n            }\r\n            console.info(this.board.tiles[randomTile].reachable);\r\n            elem.char.setTile(this.board.tiles[randomTile].getPos()[0], this.board.tiles[randomTile].getPos()[1]);\r\n            this.board.tiles[randomTile].reachable = 0;\r\n\r\n        }\r\n    }\r\n\r\n    itemSpawn() {\r\n        for (let i = 0; i < 8; ++i) {\r\n            let randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n            while (this.board.tiles[randomTile] instanceof Obstacle) {\r\n                randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n            }\r\n            while (this.board.tiles[randomTile]._hasPlayer == 1) {\r\n                randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n            }\r\n\r\n            let randomItem = Math.floor(Math.random() * this.items.length);\r\n            this.board.tiles[randomTile]._hasItem = [1, randomItem];\r\n        }\r\n    }\r\n\r\n    nextTurn() {\r\n        // TODO select first player based on character\r\n        // set active player each turn\r\n        // first player is the one with Adam\r\n        this.turn++;\r\n        if (this.turn % 2 == 0) {\r\n            this.totalTurn = turn / 2;\r\n        }\r\n    }\r\n\r\n    getPossibleMoves() {\r\n        this.removePossibleMoves();\r\n        let activePlayerChar = this.players[this.activePlayer].char;\r\n        this.possibleBottomMovesTiles = [];\r\n        this.possibleTopMovesTiles = [];\r\n        this.possibleLeftMovesTiles = [];\r\n        this.possibleRightMovesTiles = [];\r\n        this.possibleMovesIterator = [this.possibleBottomMovesTiles, this.possibleRightMovesTiles, this.possibleLeftMovesTiles, this.possibleTopMovesTiles];\r\n        for (let elem of this.possibleMovesIterator) {\r\n            for (let i = 1; i <= activePlayerChar.movementPoint; i++) {\r\n                if (elem[i - 1] instanceof Obstacle || elem[i - 2] instanceof Obstacle)\r\n                    continue;\r\n                if (elem[i - 1] instanceof EmptyTile && elem[i - 1]._hasPlayer == 1 || elem[i - 2] instanceof EmptyTile && elem[i - 2]._hasPlayer == 1)\r\n                    continue;\r\n                switch (elem) {\r\n                    case this.possibleBottomMovesTiles:\r\n                        elem[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y + i);\r\n                        break;\r\n                    case this.possibleTopMovesTiles:\r\n                        elem[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y - i);\r\n                        break;\r\n                    case this.possibleLeftMovesTiles:\r\n                        elem[i] = this.board.getTile(activePlayerChar._x - i, activePlayerChar._y);\r\n                        break;\r\n                    case this.possibleRightMovesTiles:\r\n                        elem[i] = this.board.getTile(activePlayerChar._x + i, activePlayerChar._y);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\r\n        //     if( this.possibleBottomMovesTiles[i-1] instanceof Obstacle || this.possibleBottomMovesTiles[i-2] instanceof Obstacle)\r\n        //         continue;\r\n        //         this.possibleBottomMovesTiles[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y + i);\r\n        // }\r\n        // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\r\n        //     if( this.possibleTopMovesTiles[i-1] instanceof Obstacle || this.possibleTopMovesTiles[i-2] instanceof Obstacle)\r\n        //         continue;\r\n        //         this.possibleTopMovesTiles[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y - i);\r\n        // }\r\n        // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\r\n        //     if( this.possibleRightMovesTiles[i-1] instanceof Obstacle || this.possibleRightMovesTiles[i-2] instanceof Obstacle)\r\n        //         continue;\r\n        //         this.possibleRightMovesTiles[i] = this.board.getTile(activePlayerChar._x + i, activePlayerChar._y);\r\n        // }\r\n        // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\r\n        //     if( this.possibleLeftMovesTiles[i-1] instanceof Obstacle || this.possibleLeftMovesTiles[i-2] instanceof Obstacle)\r\n        //         continue;\r\n        //         this.possibleLeftMovesTiles[i] = this.board.getTile(activePlayerChar._x - i, activePlayerChar._y);\r\n        // }\r\n        this.possibleMovesTiles = [...this.possibleBottomMovesTiles, ...this.possibleLeftMovesTiles, ...this.possibleRightMovesTiles, ...this.possibleTopMovesTiles];\r\n\r\n        for (let tile of this.possibleMovesTiles) {\r\n            if (tile instanceof EmptyTile)\r\n                if (tile._hasPlayer != 1) {\r\n                    tile.reachable = 1;\r\n                }\r\n        };\r\n    }\r\n\r\n    removePossibleMoves() {\r\n        for (let tile in this.board.tiles) {\r\n            if (this.board.tiles[tile].reachable == 1) {\r\n                this.board.tiles[tile].reachable = 0;\r\n            }\r\n        }\r\n    }\r\n}\r\nlet Game = new GameManager();\r\nexport {\r\n    Game\r\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1574773316970
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dylan\\\\Projects\\\\GameFolder2\\\\modules\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dylan\\\\Projects\\\\GameFolder2\",\"filename\":\"C:\\\\Users\\\\Dylan\\\\Projects\\\\GameFolder2\\\\modules\\\\game.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dylan\\\\Projects\\\\GameFolder2\",\"plugins\":[],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dylan\\Projects\\GameFolder2\\modules",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dylan\\Projects\\GameFolder2",
      "filename": "C:\\Users\\Dylan\\Projects\\GameFolder2\\modules\\game.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dylan\\Projects\\GameFolder2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dylan\\Projects\\GameFolder2\\modules\\game.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dylan\\Projects\\GameFolder2\\modules\\game.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dylan\\Projects\\GameFolder2\\modules",
        "sourceFileName": "game.js"
      }
    },
    "ast": null,
    "code": "class Observable {\n  constructor() {\n    this._listeners = [];\n  }\n\n  initProperties() {\n    for (let key of Object.keys(this)) {\n      const value = this[key];\n      if (['_listeners', 'dispatch'].includes(key)) continue;\n      Object.defineProperty(this, key, {\n        get: () => this[`_${key}`],\n        set: newValue => {\n          this[`_${key}`] = newValue;\n          this.dispatch();\n        }\n      });\n\n      if (value instanceof Observable) {\n        this[key].onChange(this.dispatch.bind(this));\n      }\n    }\n  } // onchange\n\n\n  onChange(listener) {\n    this._listeners.push(listener);\n  }\n\n  dispatch() {\n    for (let listener of this._listeners) {\n      if (typeof listener === 'function') listener(this);\n    }\n  }\n\n}\n\nclass Positionable extends Observable {\n  constructor(x, y) {\n    super();\n    this._x = x;\n    this._y = y;\n  }\n\n  setTile(x, y) {\n    this._x = x;\n    this._y = y;\n  }\n\n}\n\nclass Tile extends Positionable {\n  constructor(x, y) {\n    super(x, y);\n    this._hasPlayer = 0;\n  }\n\n  getPos() {\n    return [this._x, this._y];\n  }\n\n  isObstacle() {\n    if (this instanceof Obstacle) {\n      return true;\n    }\n  }\n\n  isEmpty() {\n    if (this instanceof EmptyTile) {\n      return true;\n    }\n  }\n\n  hasPlayer() {\n    for (let player of Game.players) {\n      if (this._x == player.char._x && this._y == player.char._y) {\n        return true;\n      }\n    }\n  }\n\n}\n\nclass EmptyTile extends Tile {\n  constructor(x, y) {\n    super(x, y);\n    this._type = 'Empty';\n    this._reachable = 1;\n    this._hasItem = [0];\n  }\n\n  set reachable(newVal) {\n    this._reachable = newVal;\n  }\n\n  get reachable() {\n    return this._reachable;\n  }\n\n}\n\nclass Escape extends Tile {\n  constructor(x, y) {\n    super(x, y);\n    this._type = 'Escape';\n  }\n\n}\n\nclass Obstacle extends Tile {\n  constructor(x, y) {\n    super(x, y);\n    this._type = 'Obstacle';\n    this._reachable = 0;\n  }\n\n}\n\nclass Barrel extends Obstacle {\n  constructor(x, y) {\n    super(x, y);\n    this._model = 'Barrel';\n  }\n\n}\n\nclass BarbedWire extends Obstacle {\n  constructor(x, y) {\n    super(x, y);\n    this._model = 'BarbedWire';\n  }\n\n}\n\nclass Woodbox extends Obstacle {\n  constructor(x, y) {\n    super(x, y);\n    this._model = 'Woodbox';\n  }\n\n}\n\nclass PlayerCase extends Obstacle {\n  constructor(x, y) {\n    super(x, y);\n    this._model = 'Barrel';\n  }\n\n}\n\nclass Board {\n  constructor(maxTiles) {\n    this.tiles = [];\n    this.lineOfTiles = Math.floor(Math.sqrt(maxTiles));\n\n    for (let y = 0; y < this.lineOfTiles; ++y) {\n      for (let x = 0; x < this.lineOfTiles; ++x) {\n        let randomTileGenerator = Math.random();\n\n        if (randomTileGenerator < 0.8) {\n          this.tiles.push(new EmptyTile(x, y));\n        } else {\n          let randomObstacleGenerator = Math.random();\n\n          if (randomObstacleGenerator < 0.33) {\n            this.tiles.push(new Barrel(x, y));\n          } else if (randomObstacleGenerator < 0.66) {\n            this.tiles.push(new BarbedWire(x, y));\n          } else if (randomObstacleGenerator <= 1) {\n            this.tiles.push(new Woodbox(x, y));\n          }\n        }\n      }\n    }\n  }\n\n  getTile(x, y) {\n    for (let elem of this.tiles) {\n      if (elem._x == x && elem._y == y) {\n        return elem;\n      }\n    }\n  }\n\n}\n\nclass Movable extends Positionable {\n  constructor(x, y) {\n    super(x, y);\n    this.steps = [];\n  }\n\n  move(x, y) {\n    console.info(this._x);\n    console.info(x);\n\n    if (this._x != x) {\n      this.movementPoint -= Math.abs(x - this._x);\n      console.log('PM :' + this.movementPoint);\n    } else if (this._y != y) {\n      this.movementPoint -= Math.abs(y - this._y);\n    }\n\n    this.setTile(x, y);\n  }\n\n} // Character superclass\n\n\nclass Character extends Movable {\n  constructor(x, y) {\n    super(x, y);\n    this._equipedItem = {};\n    this.initProperties();\n  }\n\n  get movementPoint() {\n    return this._movementPoint;\n  }\n\n  set movementPoint(newVal) {\n    this._movementPoint = newVal;\n  }\n\n  get equipedItem() {\n    return this._equipedItem;\n  }\n\n  set equipedItem(newVal) {\n    this._equipedItem = Game.items[newVal];\n  }\n\n  getTile() {\n    return this._x + this._y * Math.floor(Math.sqrt(Game.board.tiles.length));\n  }\n\n  setTile(x, y) {\n    if (this._x != undefined && this._y != undefined) Game.board.getTile(this._x, this._y)._hasPlayer = 0;\n    super.setTile(x, y);\n    let newTile = Game.board.getTile(x, y);\n    newTile._hasPlayer = 1;\n\n    if (newTile._hasItem[0] == 1) {\n      let item = Game.items[newTile._hasItem[1]];\n      const charType = [Survivor, Chaser];\n\n      if (this instanceof charType[item.targetChar - 1]) {\n        this.equipItem(newTile._hasItem[1]);\n        newTile._hasItem = [0];\n        console.info(this.equipedItem);\n      }\n    }\n  }\n\n  move(x, y) {\n    super.move(x, y);\n    this.setTile(x, y);\n  }\n\n  equipItem(newItem) {\n    this.equipedItem = newItem;\n  }\n\n}\n\nclass Survivor extends Character {\n  constructor(x, y) {\n    super(x, y);\n    this._movementPoint = 3;\n    this._equipedItem = {\n      name: 'Poings'\n    };\n    this._health = 100;\n  }\n\n}\n\nclass Chaser extends Character {\n  constructor(x, y) {\n    super(x, y);\n    this._movementPoint = 2;\n    this._equipedItem = {\n      name: 'Planche'\n    };\n  }\n\n} // Logic\n\n\nclass Player {\n  constructor(number, desiredChar) {\n    this.number = number;\n\n    if (desiredChar == 1) {\n      this.char = new Survivor(4, 3);\n    } else {\n      this.char = new Chaser(2, 1);\n    }\n  }\n\n}\n\nclass Item {\n  constructor(name, type, amount, targetChar) {\n    this.itemsType = ['Damage', 'Healing', 'Mover', 'Boost'];\n    this.name = name;\n    this.type = this.itemsType[type];\n    this.amount = amount;\n    this.targetChar = targetChar;\n\n    switch (type) {\n      case 0:\n        this.desc = `Occasionne ${this.amount} de dommages.`;\n        break;\n\n      case 1:\n        this.desc = `Soigne ${this.amount} de points de vie.`;\n        break;\n\n      case 2:\n        switch (targetChar) {\n          case 1:\n            this.desc = `Repousse de ${this.amount} case.`;\n            break;\n\n          case 2:\n            this.desc = `Attire de ${this.amount} case.`;\n            break;\n\n          default:\n            console.error('Le personnage ciblÃ© est incorrect');\n            break;\n        }\n\n        ;\n        break;\n\n      case 3:\n        this.desc = `Augmente de ${this.amount} les points de mouvement du personnage.`;\n        break;\n\n      default:\n        console.error('Le type d\\'item est incorrect');\n    }\n\n    ;\n\n    switch (targetChar) {\n      case 1:\n        this.descChar = `<span class='tooltiptext--survivor'>Pour Survivant.</span>`;\n        break;\n\n      case 2:\n        this.descChar = `<span class='tooltiptext--chaser'>Pour Chaser.</span>`;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n}\n\nclass GameManager {\n  constructor() {\n    this.players = [new Player(1, 1), new Player(2, 2)];\n    this.items = [new Item('Machette', 0, 20, 2), new Item('Hachoir', 0, 10, 2), new Item('Piege', 0, 15, 2), new Item('Grappin', 2, 1, 2), new Item('Skate', 3, 1, 1), new Item('Lance-pierre', 2, 1, 1), new Item('Bandages', 1, 10, 1)];\n    this.turn = 1;\n    this.totalTurn = 0;\n    this.board = new Board(49);\n    this.activePlayer = 0;\n  }\n\n  playerSpawn() {\n    for (let elem of this.players) {\n      let randomTile = Math.floor(Math.random() * this.board.tiles.length);\n\n      while (this.board.tiles[randomTile].reachable === 0 || this.board.tiles[randomTile] instanceof Obstacle) {\n        randomTile = Math.floor(Math.random() * this.board.tiles.length);\n      }\n\n      console.info(this.board.tiles[randomTile].reachable);\n      elem.char.setTile(this.board.tiles[randomTile].getPos()[0], this.board.tiles[randomTile].getPos()[1]);\n      this.board.tiles[randomTile].reachable = 0;\n    }\n  }\n\n  itemSpawn() {\n    for (let i = 0; i < 8; ++i) {\n      let randomTile = Math.floor(Math.random() * this.board.tiles.length);\n\n      while (this.board.tiles[randomTile] instanceof Obstacle) {\n        randomTile = Math.floor(Math.random() * this.board.tiles.length);\n      }\n\n      while (this.board.tiles[randomTile]._hasPlayer == 1) {\n        randomTile = Math.floor(Math.random() * this.board.tiles.length);\n      }\n\n      let randomItem = Math.floor(Math.random() * this.items.length);\n      this.board.tiles[randomTile]._hasItem = [1, randomItem];\n    }\n  }\n\n  nextTurn() {\n    // TODO select first player based on character\n    // set active player each turn\n    // first player is the one with Adam\n    this.turn++;\n\n    if (this.turn % 2 == 0) {\n      this.totalTurn = turn / 2;\n    }\n  }\n\n  getPossibleMoves() {\n    this.removePossibleMoves();\n    let activePlayerChar = this.players[this.activePlayer].char;\n    this.possibleBottomMovesTiles = [];\n    this.possibleTopMovesTiles = [];\n    this.possibleLeftMovesTiles = [];\n    this.possibleRightMovesTiles = [];\n    this.possibleMovesIterator = [this.possibleBottomMovesTiles, this.possibleRightMovesTiles, this.possibleLeftMovesTiles, this.possibleTopMovesTiles];\n\n    for (let elem of this.possibleMovesIterator) {\n      for (let i = 1; i <= activePlayerChar.movementPoint; i++) {\n        if (elem[i - 1] instanceof Obstacle || elem[i - 2] instanceof Obstacle) continue;\n        if (elem[i - 1] instanceof EmptyTile && elem[i - 1]._hasPlayer == 1 || elem[i - 2] instanceof EmptyTile && elem[i - 2]._hasPlayer == 1) continue;\n\n        switch (elem) {\n          case this.possibleBottomMovesTiles:\n            elem[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y + i);\n            break;\n\n          case this.possibleTopMovesTiles:\n            elem[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y - i);\n            break;\n\n          case this.possibleLeftMovesTiles:\n            elem[i] = this.board.getTile(activePlayerChar._x - i, activePlayerChar._y);\n            break;\n\n          case this.possibleRightMovesTiles:\n            elem[i] = this.board.getTile(activePlayerChar._x + i, activePlayerChar._y);\n            break;\n        }\n      }\n    } // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\n    //     if( this.possibleBottomMovesTiles[i-1] instanceof Obstacle || this.possibleBottomMovesTiles[i-2] instanceof Obstacle)\n    //         continue;\n    //         this.possibleBottomMovesTiles[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y + i);\n    // }\n    // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\n    //     if( this.possibleTopMovesTiles[i-1] instanceof Obstacle || this.possibleTopMovesTiles[i-2] instanceof Obstacle)\n    //         continue;\n    //         this.possibleTopMovesTiles[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y - i);\n    // }\n    // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\n    //     if( this.possibleRightMovesTiles[i-1] instanceof Obstacle || this.possibleRightMovesTiles[i-2] instanceof Obstacle)\n    //         continue;\n    //         this.possibleRightMovesTiles[i] = this.board.getTile(activePlayerChar._x + i, activePlayerChar._y);\n    // }\n    // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\n    //     if( this.possibleLeftMovesTiles[i-1] instanceof Obstacle || this.possibleLeftMovesTiles[i-2] instanceof Obstacle)\n    //         continue;\n    //         this.possibleLeftMovesTiles[i] = this.board.getTile(activePlayerChar._x - i, activePlayerChar._y);\n    // }\n\n\n    this.possibleMovesTiles = [...this.possibleBottomMovesTiles, ...this.possibleLeftMovesTiles, ...this.possibleRightMovesTiles, ...this.possibleTopMovesTiles];\n\n    for (let tile of this.possibleMovesTiles) {\n      if (tile instanceof EmptyTile) if (tile._hasPlayer != 1) {\n        tile.reachable = 1;\n      }\n    }\n\n    ;\n  }\n\n  removePossibleMoves() {\n    for (let tile in this.board.tiles) {\n      if (this.board.tiles[tile].reachable == 1) {\n        this.board.tiles[tile].reachable = 0;\n      }\n    }\n  }\n\n}\n\nlet Game = new GameManager();\nexport { Game };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "../src/game.js"
      ],
      "names": [
        "constructor",
        "initProperties",
        "Object",
        "value",
        "get",
        "key",
        "set",
        "newValue",
        "onChange",
        "dispatch",
        "listener",
        "setTile",
        "getPos",
        "isObstacle",
        "isEmpty",
        "hasPlayer",
        "Game",
        "player",
        "Math",
        "y",
        "x",
        "randomTileGenerator",
        "randomObstacleGenerator",
        "getTile",
        "elem",
        "move",
        "console",
        "newTile",
        "item",
        "charType",
        "equipItem",
        "name",
        "desiredChar",
        "amount",
        "playerSpawn",
        "randomTile",
        "itemSpawn",
        "i",
        "randomItem",
        "nextTurn",
        "turn",
        "getPossibleMoves",
        "activePlayerChar",
        "tile",
        "removePossibleMoves"
      ],
      "mappings": "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",
      "sourcesContent": [
        "class Observable {\r\n    constructor() {\r\n        this._listeners = [];\r\n    }\r\n\r\n    initProperties() {\r\n        for (let key of Object.keys(this)) {\r\n            const value = this[key];\r\n            if (['_listeners', 'dispatch'].includes(key)) continue;\r\n            Object.defineProperty(this, key, {\r\n                get: () => this[`_${key}`],\r\n                set: (newValue) => {\r\n                    this[`_${key}`] = newValue;\r\n                    this.dispatch()\r\n                }\r\n            })\r\n\r\n            if (value instanceof Observable) {\r\n                this[key].onChange(this.dispatch.bind(this))\r\n            }\r\n        }\r\n    }\r\n\r\n    // onchange\r\n    onChange(listener) {\r\n        this._listeners.push(listener);\r\n    }\r\n\r\n    dispatch() {\r\n        for (let listener of this._listeners) {\r\n            if (typeof listener === 'function') listener(this)\r\n        }\r\n    }\r\n}\r\n\r\nclass Positionable extends Observable {\r\n    constructor(x, y) {\r\n        super();\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n    setTile(x, y) {\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Tile extends Positionable {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._hasPlayer = 0;\r\n    }\r\n\r\n    getPos() {\r\n        return [this._x, this._y];\r\n    }\r\n\r\n    isObstacle() {\r\n        if (this instanceof Obstacle) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    isEmpty() {\r\n        if (this instanceof EmptyTile) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    hasPlayer() {\r\n        for (let player of Game.players) {\r\n            if (this._x == player.char._x && this._y == player.char._y) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass EmptyTile extends Tile {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._type = 'Empty';\r\n        this._reachable = 1;\r\n        this._hasItem = [0];\r\n    }\r\n    set reachable(newVal) {\r\n        this._reachable = newVal;\r\n    }\r\n\r\n    get reachable() {\r\n        return this._reachable;\r\n    }\r\n}\r\n\r\nclass Escape extends Tile {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._type = 'Escape';\r\n    }\r\n}\r\n\r\nclass Obstacle extends Tile {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._type = 'Obstacle';\r\n        this._reachable = 0;\r\n    }\r\n}\r\n\r\nclass Barrel extends Obstacle {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._model = 'Barrel';\r\n    }\r\n}\r\nclass BarbedWire extends Obstacle {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._model = 'BarbedWire';\r\n\r\n    }\r\n}\r\nclass Woodbox extends Obstacle {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._model = 'Woodbox';\r\n\r\n    }\r\n}\r\n\r\nclass PlayerCase extends Obstacle {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._model = 'Barrel';\r\n\r\n    }\r\n}\r\n\r\n\r\nclass Board {\r\n    constructor(maxTiles) {\r\n        this.tiles = [];\r\n        this.lineOfTiles = Math.floor(Math.sqrt(maxTiles));\r\n        for (let y = 0; y < this.lineOfTiles; ++y) {\r\n            for (let x = 0; x < this.lineOfTiles; ++x) {\r\n                let randomTileGenerator = Math.random();\r\n                if (randomTileGenerator < 0.8) {\r\n                    this.tiles.push(new EmptyTile(x, y))\r\n                } else {\r\n                    let randomObstacleGenerator = Math.random();\r\n                    \r\n                    if (randomObstacleGenerator < 0.33) {\r\n                        this.tiles.push(new Barrel(x, y))\r\n                    } else if (randomObstacleGenerator < 0.66) {\r\n                        this.tiles.push(new BarbedWire(x, y))\r\n\r\n                    } else if (randomObstacleGenerator <= 1) {\r\n                        this.tiles.push(new Woodbox(x, y))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getTile(x, y) {\r\n        for (let elem of this.tiles) {\r\n            if (elem._x == x && elem._y == y) {\r\n                return elem;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nclass Movable extends Positionable {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this.steps = [];\r\n    }\r\n\r\n    move(x, y) {\r\n        console.info(this._x);\r\n        console.info(x);\r\n        if (this._x != x) {\r\n            this.movementPoint -= Math.abs((x - this._x));\r\n            console.log('PM :' + this.movementPoint);\r\n        } else if (this._y != y) {\r\n            this.movementPoint -= Math.abs((y - this._y));\r\n\r\n        }\r\n        this.setTile(x, y)\r\n    }\r\n\r\n}\r\n\r\n\r\n// Character superclass\r\n\r\nclass Character extends Movable {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._equipedItem = {}; \r\n        this.initProperties();\r\n    }\r\n\r\n    get movementPoint() {\r\n        return this._movementPoint\r\n    }\r\n    set movementPoint(newVal) {\r\n        this._movementPoint = newVal\r\n    }\r\n\r\n    get equipedItem() {\r\n        return this._equipedItem\r\n    }\r\n    set equipedItem(newVal) {\r\n        this._equipedItem = Game.items[newVal];\r\n    }\r\n\r\n    getTile() {\r\n        return this._x + (this._y * Math.floor(Math.sqrt(Game.board.tiles.length)));\r\n\r\n    }\r\n\r\n    setTile(x, y) {\r\n        if (this._x != undefined && this._y != undefined)\r\n            Game.board.getTile(this._x, this._y)._hasPlayer = 0;\r\n        super.setTile(x, y);\r\n        let newTile = Game.board.getTile(x, y);\r\n        newTile._hasPlayer = 1;\r\n        if(newTile._hasItem[0] == 1){\r\n            let item = Game.items[newTile._hasItem[1]];\r\n            const charType = [Survivor, Chaser];\r\n            if(this instanceof charType[item.targetChar - 1]){\r\n                this.equipItem(newTile._hasItem[1]);\r\n                newTile._hasItem = [0];\r\n                console.info(this.equipedItem);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    move(x, y) {\r\n        super.move(x, y);\r\n        this.setTile(x, y);\r\n    }\r\n\r\n    equipItem(newItem){\r\n        this.equipedItem = newItem;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nclass Survivor extends Character {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._movementPoint = 3;\r\n        this._equipedItem = {name: 'Poings'}; \r\n        this._health = 100;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nclass Chaser extends Character {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this._movementPoint = 2;\r\n        this._equipedItem = {name: 'Planche'}; \r\n\r\n\r\n    }\r\n}\r\n\r\n// Logic\r\n\r\nclass Player {\r\n    constructor(number, desiredChar) {\r\n        this.number = number;\r\n        if (desiredChar == 1) {\r\n            this.char = new Survivor(4, 3);\r\n        } else {\r\n            this.char = new Chaser(2, 1);\r\n        }\r\n    }\r\n}\r\n\r\nclass Item {\r\n    constructor(name, type, amount, targetChar) {\r\n        this.itemsType = ['Damage', 'Healing', 'Mover', 'Boost'];\r\n        this.name = name;\r\n        this.type = this.itemsType[type];\r\n        this.amount = amount;\r\n        this.targetChar = targetChar;\r\n        switch (type) {\r\n            case 0:\r\n                this.desc = `Occasionne ${this.amount} de dommages.`;\r\n                break;\r\n            case 1:\r\n                this.desc = `Soigne ${this.amount} de points de vie.`;\r\n                break;\r\n            case 2:\r\n                switch (targetChar) {\r\n                    case 1:\r\n                        this.desc = `Repousse de ${this.amount} case.`;\r\n                        break;\r\n                    case 2:\r\n                        this.desc = `Attire de ${this.amount} case.`;\r\n                        break;\r\n                    default:\r\n                        console.error('Le personnage ciblÃ© est incorrect');\r\n                        break;\r\n                };\r\n                break;\r\n            case 3:\r\n                this.desc = `Augmente de ${this.amount} les points de mouvement du personnage.`\r\n                break;\r\n            default:\r\n                console.error('Le type d\\'item est incorrect');\r\n            };\r\n            switch(targetChar) {\r\n                case 1:\r\n                    this.descChar = `<span class='tooltiptext--survivor'>Pour Survivant.</span>`;\r\n                    break;\r\n                case 2:\r\n                    this.descChar = `<span class='tooltiptext--chaser'>Pour Chaser.</span>`;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n    }\r\n}\r\n\r\nclass GameManager {\r\n    constructor() {\r\n        this.players = [\r\n            new Player(1, 1), new Player(2, 2)\r\n        ];\r\n        this.items = [\r\n            new Item('Machette', 0, 20, 2),\r\n            new Item('Hachoir', 0, 10, 2),\r\n            new Item('Piege', 0, 15, 2),\r\n            new Item('Grappin', 2, 1, 2),\r\n            new Item('Skate', 3, 1, 1),\r\n            new Item('Lance-pierre', 2, 1, 1),\r\n            new Item('Bandages', 1, 10, 1),\r\n        ];\r\n        this.turn = 1;\r\n        this.totalTurn = 0;\r\n        this.board = new Board(49);\r\n        this.activePlayer = 0;\r\n        \r\n    }\r\n\r\n    playerSpawn() {\r\n        for (let elem of this.players) {\r\n            let randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n            while (this.board.tiles[randomTile].reachable === 0 || this.board.tiles[randomTile] instanceof Obstacle) {\r\n                randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n            }\r\n            console.info(this.board.tiles[randomTile].reachable);\r\n            elem.char.setTile(this.board.tiles[randomTile].getPos()[0], this.board.tiles[randomTile].getPos()[1]);\r\n            this.board.tiles[randomTile].reachable = 0;\r\n\r\n        }\r\n    }\r\n\r\n    itemSpawn() {\r\n        for (let i = 0; i < 8; ++i) {\r\n            let randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n            while (this.board.tiles[randomTile] instanceof Obstacle) {\r\n                randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n            }\r\n            while (this.board.tiles[randomTile]._hasPlayer == 1) {\r\n                randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n            }\r\n\r\n            let randomItem = Math.floor(Math.random() * this.items.length);\r\n            this.board.tiles[randomTile]._hasItem = [1, randomItem];\r\n        }\r\n    }\r\n\r\n    nextTurn() {\r\n        // TODO select first player based on character\r\n        // set active player each turn\r\n        // first player is the one with Adam\r\n        this.turn++;\r\n        if (this.turn % 2 == 0) {\r\n            this.totalTurn = turn / 2;\r\n        }\r\n    }\r\n\r\n    getPossibleMoves() {\r\n        this.removePossibleMoves();\r\n        let activePlayerChar = this.players[this.activePlayer].char;\r\n        this.possibleBottomMovesTiles = [];\r\n        this.possibleTopMovesTiles = [];\r\n        this.possibleLeftMovesTiles = [];\r\n        this.possibleRightMovesTiles = [];\r\n        this.possibleMovesIterator = [this.possibleBottomMovesTiles, this.possibleRightMovesTiles, this.possibleLeftMovesTiles, this.possibleTopMovesTiles];\r\n        for (let elem of this.possibleMovesIterator) {\r\n            for (let i = 1; i <= activePlayerChar.movementPoint; i++) {\r\n                if (elem[i - 1] instanceof Obstacle || elem[i - 2] instanceof Obstacle)\r\n                    continue;\r\n                if (elem[i - 1] instanceof EmptyTile && elem[i - 1]._hasPlayer == 1 || elem[i - 2] instanceof EmptyTile && elem[i - 2]._hasPlayer == 1)\r\n                    continue;\r\n                switch (elem) {\r\n                    case this.possibleBottomMovesTiles:\r\n                        elem[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y + i);\r\n                        break;\r\n                    case this.possibleTopMovesTiles:\r\n                        elem[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y - i);\r\n                        break;\r\n                    case this.possibleLeftMovesTiles:\r\n                        elem[i] = this.board.getTile(activePlayerChar._x - i, activePlayerChar._y);\r\n                        break;\r\n                    case this.possibleRightMovesTiles:\r\n                        elem[i] = this.board.getTile(activePlayerChar._x + i, activePlayerChar._y);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\r\n        //     if( this.possibleBottomMovesTiles[i-1] instanceof Obstacle || this.possibleBottomMovesTiles[i-2] instanceof Obstacle)\r\n        //         continue;\r\n        //         this.possibleBottomMovesTiles[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y + i);\r\n        // }\r\n        // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\r\n        //     if( this.possibleTopMovesTiles[i-1] instanceof Obstacle || this.possibleTopMovesTiles[i-2] instanceof Obstacle)\r\n        //         continue;\r\n        //         this.possibleTopMovesTiles[i] = this.board.getTile(activePlayerChar._x, activePlayerChar._y - i);\r\n        // }\r\n        // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\r\n        //     if( this.possibleRightMovesTiles[i-1] instanceof Obstacle || this.possibleRightMovesTiles[i-2] instanceof Obstacle)\r\n        //         continue;\r\n        //         this.possibleRightMovesTiles[i] = this.board.getTile(activePlayerChar._x + i, activePlayerChar._y);\r\n        // }\r\n        // for (let i = 1; i <= activePlayerChar.movementPoint; i++){\r\n        //     if( this.possibleLeftMovesTiles[i-1] instanceof Obstacle || this.possibleLeftMovesTiles[i-2] instanceof Obstacle)\r\n        //         continue;\r\n        //         this.possibleLeftMovesTiles[i] = this.board.getTile(activePlayerChar._x - i, activePlayerChar._y);\r\n        // }\r\n        this.possibleMovesTiles = [...this.possibleBottomMovesTiles, ...this.possibleLeftMovesTiles, ...this.possibleRightMovesTiles, ...this.possibleTopMovesTiles];\r\n\r\n        for (let tile of this.possibleMovesTiles) {\r\n            if (tile instanceof EmptyTile)\r\n                if (tile._hasPlayer != 1) {\r\n                    tile.reachable = 1;\r\n                }\r\n        };\r\n    }\r\n\r\n    removePossibleMoves() {\r\n        for (let tile in this.board.tiles) {\r\n            if (this.board.tiles[tile].reachable == 1) {\r\n                this.board.tiles[tile].reachable = 0;\r\n            }\r\n        }\r\n    }\r\n}\r\nlet Game = new GameManager();\r\nexport {\r\n    Game\r\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1574774285933
  }
}