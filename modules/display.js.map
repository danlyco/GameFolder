{"version":3,"sources":["../src/display.js"],"names":["Game","Event","Test","DisplayManager","constructor","state","intro","$intro","$","css","background","text","addClass","appendTo","attr","gameModeSelection","$gameMode","prependTo","$gameModeBoxes","slideShow","characterSelection","mode","$previousScreen","slideHide","$charSelTip","$charSel","forEach","elem","$charSelPlayer","$charSelChars","possibleChar","getCharModels","char","toLowerCase","$charSelector","transform","left","characterSelector","clickedElement","removeClass","target","classList","remove","add","$background","cleanup","$char","split","pop","replace","startButton","timer","setTimeout","animation","winning","winner","$interface","empty","$winningWrapper","init","$gameBoard","numberRowCol","Math","floor","sqrt","board","tiles","length","y","$row","x","tileNumber","$col","$tile","$block","_type","isEmpty","_hasItem","hasPlayer","$item","items","name","html","desc","descChar","getPossibleMoves","isObstacle","_model","reachable","players","getTile","find","removeAttr","Display","interface","showDamages","$wrapper","$totalTurnBar","player","$interfacePlayer","number","$healthbar","activeFight","onFight","tile","_hasPlayer","getPos","totalTurn","escapeTurn","width","activePlayer","i","desiredChar","equipedItem","_health","refresh","default"],"mappings":"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","sourcesContent":["\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable no-unused-vars */\r\n\r\n/**\r\n * @module Display\r\n */\r\n\r\n\r\nimport Game from './game.js';\r\nimport Event from './event.js';\r\nimport Test from './test.js';\r\n\r\nclass DisplayManager {\r\n  /**\r\n   * Call different display states\r\n   * @class DisplayManager\r\n   */\r\n  constructor() {\r\n    this.state = 'intro';\r\n    // eslint-disable-next-line no-restricted-syntax\r\n\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  /** Used to show intro screen */\r\n  intro() {\r\n    const $intro = $('.intro').css({\r\n      background: 'url(\"./assets/img/intro.gif\") no-repeat',\r\n      'background-size': '100%',\r\n    });\r\n    $('<button></button>').text('Nouvelle partie').addClass('intro--newgame')\r\n      .appendTo($intro);\r\n    $('<img>').addClass('intro--leaves')\r\n      .attr('src', './assets/img/intro-leaves.png').appendTo($intro);\r\n    $('<img>').addClass('intro--title')\r\n      .attr('src', './assets/img/intro-title.png').appendTo($intro);\r\n  }\r\n\r\n  /** Used to show game mode selection screen */\r\n  gameModeSelection() {\r\n    const $intro = $('.intro');\r\n    $('.intro--leaves').css('animation-play-state', 'running');\r\n    $('<h1></h1>').text('Select game mode').addClass('intro--gameMode__tip').appendTo($intro);\r\n    const $gameMode = $('<div></div>').addClass('intro--gameMode').prependTo($intro);\r\n    $('<div></div>').addClass('intro--gameMode__box').css('background', 'url(\"./assets/img/intro--survival.png\") 0 0 no-repeat').appendTo($gameMode);\r\n    $('<div></div>').addClass('intro--gameMode__box').css('background', 'url(\"./assets/img/intro--versus.png\") 0 0 no-repeat').appendTo($gameMode);\r\n    const $gameModeBoxes = $('.intro--gameMode__box, .intro--gameMode__tip');\r\n    this.slideShow($gameModeBoxes, 1000);\r\n  }\r\n\r\n  /** Used to show character selection screen */\r\n  characterSelection(mode) {\r\n    // Removing previous screen\r\n    const $previousScreen = $('.intro--gameMode__box, .intro--gameMode__tip');\r\n    this.slideHide($previousScreen);\r\n\r\n    const $intro = $('.intro');\r\n    const $charSelTip = $('<h1></h1>').text('Select character').addClass('intro--characterSelection__tip').appendTo($intro);\r\n    this.slideShow($charSelTip, 1000);\r\n    const $charSel = $('<div></div>').addClass('intro--characterSelection').appendTo($intro);\r\n    [1, 2].forEach(\r\n      (elem) => {\r\n        const $charSelPlayer = $('<div></div>').addClass('intro--characterSelection__player').appendTo($charSel);\r\n        $('<h1></h1>').text(`P${elem}`).appendTo($charSelPlayer);\r\n        const $charSelChars = $('<div></div>').addClass('intro--characterSelection__chars').appendTo($charSelPlayer);\r\n        const possibleChar = Game.getCharModels(mode);\r\n        for (const char of possibleChar) {\r\n          $('<div></div>').addClass('intro--characterSelection__char').css('background-image',\r\n            `url('./assets/chars/${char.toLowerCase()}.png')`).appendTo($charSelChars);\r\n        }\r\n        const $charSelector = $('<div></div>').addClass('intro--characterSelection__charPreview').appendTo($charSelPlayer);\r\n        if (elem === 2) {$charSelector.css({\r\n          transform: 'scaleX(-1)',\r\n          left: '40%',\r\n        });\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  /** Used to get visual feedback when selecting character */\r\n  characterSelector(char, clickedElement) {\r\n    $(`.intro--characterSelection__player:eq(${char}) > .intro--characterSelection__chars > .intro--characterSelection__char`).addClass('out');\r\n    $(`.intro--characterSelection__player:eq(${char}) > .intro--characterSelection__chars > .intro--characterSelection__char`).removeClass('selected');\r\n    clickedElement.target.classList.remove('out');\r\n    clickedElement.target.classList.add('selected');\r\n    const $background = $(`.intro--characterSelection__player:eq(${char}) > .intro--characterSelection__chars > .selected`).css('background-image');\r\n    const cleanup = '/\"|\\'|)/g';\r\n    const $char = $background.split('/').pop().replace(\"cleanup\", '').split('.png')[0];\r\n    $(`.intro--characterSelection__player:eq(${char}) > .intro--characterSelection__charPreview`).css('background-image', 'none');\r\n    $(`.intro--characterSelection__player:eq(${char}) > .intro--characterSelection__charPreview`).css('background-image', $background);\r\n    return $char;\r\n  }\r\n\r\n  startButton() {\r\n    const $intro = $('.intro');\r\n    $('.intro--characterSelection__startButton').remove();\r\n    $('<button>').text('START').addClass('intro--characterSelection__startButton').appendTo($intro);\r\n  }\r\n\r\n  /**\r\n   * Show an element with slide down animation\r\n   * @param {ObJect} elem\r\n   * @param {Int} timer Niliseconds value before the animation starts\r\n   */\r\n  slideShow(elem, timer) {\r\n    setTimeout(() => {\r\n      elem.css({\r\n        animation: 'slidedown-show 1s forwards',\r\n        'animation-play-state': 'running',\r\n      });\r\n    }, timer);\r\n  }\r\n\r\n  /**\r\n   * Hide an element with slide up animation\r\n   * @param {ObJect} elem\r\n   */\r\n  slideHide(elem) {\r\n    elem.css({\r\n      animation: 'slideup-hide 1s forwards',\r\n      'animation-play-state': 'running',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Display winner screen\r\n   * @param {Int} player select winner\r\n   */\r\n  winning() {\r\n    if (!Game.winner) return;\r\n    const $interface = $('.interface');\r\n    $interface.empty();\r\n    $interface.css('pointer-events', 'all');\r\n    const $winningWrapper = $('<div></div>').addClass('interface--winner').appendTo($interface);\r\n    $('<h1></h1>').text(`PLAYER ${Game.winner} WINS`).addClass('interface--winner__text').appendTo($winningWrapper);\r\n    $('<button></button>').text('NEW GAME').addClass('interface--winner__newgame').appendTo($winningWrapper);\r\n    $('<button></button>').text('SHARE YOUR VICTORY').addClass('interface--winner__link').appendTo($winningWrapper);\r\n  }\r\n\r\n  /**\r\n   * Init the board with all games value\r\n   */\r\n  init() {\r\n    const $intro = $('.intro');\r\n    this.slideHide($intro, 1000);\r\n    setTimeout(() => {\r\n      $intro.remove();\r\n    }, 105);\r\n    $('table').css('animation-play-state', 'running');\r\n    const $gameBoard = $('tbody');\r\n\r\n    // Calculating number of rows and line\r\n    // Ex: if board contains 49 tiles, get square root of 49 = 7.\r\n    const numberRowCol = Math.floor(Math.sqrt(Game.board.tiles.length));\r\n\r\n    for (let y = 0; y < numberRowCol; ++y) {\r\n      const $row = $('<tr></tr>').css({\r\n        transform: `translateY(${19 * y}px)`,\r\n      }).addClass(`row-${y}`).appendTo($gameBoard);\r\n      for (let x = 0; x < numberRowCol; ++x) {\r\n        const tileNumber = x + numberRowCol * y;\r\n        const $col = $('<td></td>').css({\r\n          transform: `translateX(${19 * x}px)`,\r\n        }).addClass(`col-${x}`).appendTo($row);\r\n        const $tile = $('<div></div>').addClass('block').addClass(`tile-${tileNumber}`).appendTo($col);\r\n        const $block = $('<div></div>').addClass(`block--${Game.board.tiles[tileNumber]._type.toLowerCase()}`).appendTo($tile);\r\n        if (Game.board.tiles[tileNumber].isEmpty()) {\r\n          if (Game.board.tiles[tileNumber]._hasItem[0] === 1) {\r\n            if (Game.board.tiles[tileNumber].hasPlayer === 0) {\r\n              const $item = $('<div></div>').addClass('item').css('background', `url(../assets/items/${Game.items[Game.board.tiles[tileNumber]._hasItem[1]].name.toLowerCase()}.png) 0px 0px no-repeat`).appendTo($block);\r\n              $('<div></div>').addClass('tooltiptext').html(`<h1>${Game.items[Game.board.tiles[tileNumber]._hasItem[1]].name}</h1><br /><p>${Game.items[Game.board.tiles[tileNumber]._hasItem[1]].desc}</p><br />${Game.items[Game.board.tiles[tileNumber]._hasItem[1]].descChar}`).appendTo($item);\r\n            }\r\n          } else {\r\n            // $block.find('.item').css('opacity', '0');\r\n          }\r\n        }\r\n\r\n        Game.getPossibleMoves();\r\n\r\n        if (Game.board.tiles[tileNumber].isObstacle()) {\r\n          $block.addClass(`block--obstacle__${Game.board.tiles[tileNumber]._model.toLowerCase()}`);\r\n        }\r\n        if (Game.board.tiles[tileNumber].reachable === 1) {\r\n          $(`.tile-${tileNumber}`).addClass('block--possibleMove');\r\n        } else {\r\n          $(`.tile-${tileNumber}`).removeClass('block--possibleMove');\r\n        }\r\n      }\r\n    }\r\n\r\n    $(`.tile-${Game.players[0].char.getTile()}`).find('div:eq(0)').removeAttr('class').addClass('block--player')\r\n      .addClass(`block--player__${Game.players[0].char.name.toLowerCase()}`);\r\n    $(`.tile-${Game.players[1].char.getTile()}`).find('div:eq(0)').removeAttr('class').addClass('block--player')\r\n      .addClass(`block--player__${Game.players[1].char.name.toLowerCase()}`);\r\n\r\n    Display.interface();\r\n  }\r\n\r\n  static showDamages() {\r\n    // let $;\r\n  }\r\n\r\n  /** Remove actual board visual elements */\r\n  remove() {\r\n    const $gameBoard = $('tbody tr');\r\n    $gameBoard.remove();\r\n  }\r\n\r\n  /** Construct interface based on GameMode */\r\n  interface() {\r\n    // Basic interface writing\r\n    const $wrapper = $('.interface');\r\n    $wrapper.empty();\r\n    $('<div></div>').addClass('interface--element interface--fight__blason').prependTo($wrapper);\r\n    $('<div></div>').addClass('interface--element interface--button__music').prependTo($wrapper);\r\n    const $totalTurnBar = $('<div></div>').addClass('interface--element interface--bar__totalturn').prependTo($wrapper);\r\n    $('<p></p>').addClass('totalTurn').appendTo($totalTurnBar);\r\n    $('<div></div>').addClass('interface--bar__totalturn__fill').appendTo($totalTurnBar);\r\n    $('<div></div>').addClass('interface--button__action1').attr('id', 'action1').prependTo($wrapper);\r\n    $('<div></div>').addClass('interface--button__action2').attr('id', 'action2').prependTo($wrapper);\r\n    Game.players.forEach(\r\n      (player) => {\r\n        const $interfacePlayer = $('<div></div>').addClass(`interface--player interface--player__${player.number}`).appendTo($wrapper);\r\n        $('<div></div>').addClass(`interface--element interface--player__${player.number}__char`).appendTo($interfacePlayer);\r\n        $('<div></div>').addClass(`interface--element interface--equipedItem interface--player__${player.number}__equipedItem`).appendTo($interfacePlayer);\r\n        const $healthbar = $('<div></div>').addClass('interface--element interface--healthbar').appendTo($interfacePlayer);\r\n        $('<div></div>').addClass('interface--healthbar__overlay').appendTo($healthbar);\r\n        if (player.number === 2) $healthbar.css('transform', 'scaleX(-1)');\r\n      },\r\n    );\r\n\r\n    if (Game.mode === 'versus') {\r\n      const activeFight = Game.players[0].char.onFight;\r\n      switch (activeFight) {\r\n      // in fight loop\r\n        case 1:\r\n          $('.interface--button__action1').css('background', 'url(./assets/img/button-attack.png) no-repeat').css('left', '49%');\r\n          $('.interface--button__action2').css('background', 'url(./assets/img/button-block.png) no-repeat');\r\n          $('.interface--fight-blason:eq(0)').css('visibility', 'visible');\r\n          Game.board.tiles.forEach((tile) => {\r\n            if (!tile._hasPlayer) {\r\n              $(`.tile-${tile.getPos()[0] + tile.getPos()[1] * Math.floor(Math.sqrt(Game.board.tiles.length))}:eq(0)`).css('filter', 'grayscale(100)');\r\n            }\r\n          });\r\n          break;\r\n\r\n        // out of fight\r\n        case 0:\r\n          $('#action1').css('background', 'url(./assets/img/button-equip.png) no-repeat');\r\n          $('#action2').css('background', 'url(./assets/img/button-turn.png) no-repeat');\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      $('.interface--bar__totalturn').css('visibility', 'visible');\r\n      $('.totalTurn').text(`Tour : ${Game.totalTurn}/${Game.escapeTurn}`);\r\n      $('.interface--bar__totalturn__fill').width(`${(Game.totalTurn / Game.escapeTurn) * 100}%`);\r\n    }\r\n\r\n    /**\r\n     * Show the player which one is active\r\n     */\r\n    switch (Game.activePlayer) {\r\n      case 0:\r\n        $('.interface--player__1').removeClass('interface--inactive');\r\n        $('.interface--player__2').addClass('interface--inactive');\r\n        break;\r\n\r\n      case 1:\r\n        $('.interface--player__2').removeClass('interface--inactive');\r\n        $('.interface--player__1').addClass('interface--inactive');\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    for (let i = 0; i < Game.players.length; ++i) {\r\n      if (Game.players[i].desiredChar === 0) {\r\n        $(`.interface--player__${i + 1}__char:eq(0)`).addClass('interface--player__char__survivor');\r\n      } else {\r\n        $(`.interface--player__${i + 1}__char:eq(0)`).addClass('interface--player__char__chaser');\r\n      }\r\n      $(`.interface--player__${i + 1}__char:eq(0)`).addClass(`block--player__${Game.players[i].char.name.toLowerCase()}`);\r\n      $(`.interface--player__${i + 1}__equipedItem:eq(0)`).css('background', `url(../assets/items/${Game.players[i].char.equipedItem.name.toLowerCase()}.png) center center no-repeat, black`);\r\n      $(`.interface--player__${i + 1} .interface--healthbar__overlay`).css({\r\n        width: `${Game.players[i].char._health}%`,\r\n      }).text(`${Game.players[i].char._health}/100`);\r\n    }\r\n  }\r\n\r\n  /** Refresh visual elements of board */\r\n  refresh() {\r\n    Display.remove();\r\n    Display.init();\r\n  }\r\n}\r\n\r\nconst Display = new DisplayManager();\r\nDisplay.intro();\r\n\r\n\r\nexport { Display as default };\r\n"],"file":"display.js"}