{"version":3,"sources":["../src/game.js"],"names":["Observable","constructor","_listeners","initProperties","key","Object","keys","value","includes","defineProperty","get","set","newValue","dispatch","onChange","bind","listener","push","Positionable","x","y","_x","_y","setTile","Tile","_hasPlayer","reachable","getPos","isObstacle","Obstacle","isEmpty","EmptyTile","hasPlayer","player","Game","players","char","hasItem","_hasItem","_type","newVal","_reachable","Escape","Barrel","_model","BarbedWire","Woodbox","Board","maxTiles","tiles","lineOfTiles","Math","floor","sqrt","randomTileGenerator","random","randomObstacleGenerator","getTile","elem","isPlayerNear","playerTile","playerNear","tile","adjacentTiles","adjacentTile","undefined","Movable","steps","move","movementPoint","abs","Character","_equipedItem","onFight","name","amount","_movementPoint","equipedItem","items","board","length","newTile","checkItem","itemIndex","itemTile","item","charType","Survivor","Chaser","targetChar","equipItem","newItem","previousItem","previousItemIndex","getItemIndex","model","defaultMovePoints","_health","Player","number","desiredChar","desiredModel","String","Item","type","itemsType","desc","descChar","GameManager","turn","playerModel","playersAction","activePlayer","totalTurn","escapeTurn","getCharModels","mode","chaser","survivor","models","playerSpawn","index","entries","randomTile","itemSpawn","i","randomItem","nextTurn","action","playerAction","nextFightTurn","nextGameTurn","onFightState","getPossibleMoves","removePossibleMoves","possibleBottomMovesTiles","possibleTopMovesTiles","possibleLeftMovesTiles","possibleRightMovesTiles","possibleMovesIterator","possibleMovesTiles","checkPlayersProximity","selChar","selChar2","selCharProx","fight","itemQuery","SurvivalGameManager","VersusGameManager","winner","previousHealthFirstPlayer","default"],"mappings":"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","sourcesContent":["/**\r\n * @module Game\r\n */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable max-classes-per-file */\r\nclass Observable {\r\n  /**\r\n   * Reactive class\r\n   * @abstract\r\n   */\r\n  constructor() {\r\n    this._listeners = [];\r\n  }\r\n\r\n  /**\r\n   * Make object properties reactive\r\n   * should be called after properties initialization to make them reactive\r\n   */\r\n  initProperties() {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const key of Object.keys(this)) {\r\n      const value = this[key];\r\n      // eslint-disable-next-line no-continue\r\n      if (['_listeners', 'dispatch'].includes(key)) continue;\r\n      Object.defineProperty(this, key, {\r\n        get: () => this[`_${key}`],\r\n        set: (newValue) => {\r\n          this[`_${key}`] = newValue;\r\n          this.dispatch();\r\n        },\r\n      });\r\n\r\n      if (value instanceof Observable) {\r\n        this[key].onChange(this.dispatch.bind(this));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add callback to be called when a reactive property is changed\r\n   */\r\n  onChange(listener) {\r\n    this._listeners.push(listener);\r\n  }\r\n\r\n  /**\r\n   * Execute all callback listeners of an object when a reactive value is changed\r\n   */\r\n  dispatch() {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const listener of this._listeners) {\r\n      if (typeof listener === 'function') listener(this);\r\n    }\r\n  }\r\n}\r\n\r\nclass Positionable extends Observable {\r\n  /**\r\n     * Minimum is 0. Maximum is square root of class Board maxTiles - 1\r\n     * example : maxTiles = 49, maximum is 7 - 1 = 6\r\n     * @abstract\r\n     * @extends Observable\r\n     * @param {Int} x x axis value\r\n     * @param {Int} y y axis value\r\n     */\r\n  constructor(x, y) {\r\n    super();\r\n    this._x = x;\r\n    this._y = y;\r\n  }\r\n\r\n  setTile(x, y) {\r\n    this._x = x;\r\n    this._y = y;\r\n  }\r\n}\r\n\r\nclass Tile extends Positionable {\r\n  /**\r\n   * @abstract\r\n   * @extends Positionable\r\n   * @param {Int} x x axis\r\n   * @param {Int} y y axis\r\n   */\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this._hasPlayer = 0;\r\n    this.reachable = 1;\r\n  }\r\n\r\n  /**\r\n   * Return an array of x Axis in index 0 and y Axis in index 1\r\n   */\r\n  getPos() {\r\n    return [this._x, this._y];\r\n  }\r\n\r\n  /**\r\n   * Bool, return true if tile is an obstacle\r\n   */\r\n  isObstacle() {\r\n    if (this instanceof Obstacle) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Bool, return true if tile is empty\r\n   */\r\n  isEmpty() {\r\n    if (this instanceof EmptyTile) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Bool, return true if tile has player in it\r\n   */\r\n  hasPlayer() {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const player of Game.players) {\r\n      if (this._x === player.char._x && this._y === player.char._y) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Bool, return true if tile has item in it\r\n  hasItem() {\r\n    if (this._hasItem[0] === 1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Empty tile, can either stay empty, have a player or an item\r\n * @extends Tile\r\n */\r\nclass EmptyTile extends Tile {\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this._type = 'Empty';\r\n    this._hasItem = [0];\r\n  }\r\n\r\n  set reachable(newVal) {\r\n    this._reachable = newVal;\r\n  }\r\n\r\n  get reachable() {\r\n    return this._reachable;\r\n  }\r\n\r\n  set hasPlayer(newVal) {\r\n    this._hasPlayer = newVal;\r\n  }\r\n\r\n  get hasPlayer() {\r\n    return this._hasPlayer;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nclass Escape extends Tile {\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this._type = 'Escape';\r\n  }\r\n}\r\n\r\n/**\r\n * Tile that cannot be reached\r\n * @class Obstacle\r\n * @extends Tile\r\n * @abstract\r\n */\r\nclass Obstacle extends Tile {\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this._type = 'Obstacle';\r\n    this._reachable = 0;\r\n  }\r\n}\r\n\r\n/**\r\n * Setting model Barrel for an Obstacle\r\n * @extends Obstacle\r\n */\r\n\r\nclass Barrel extends Obstacle {\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this._model = 'Barrel';\r\n  }\r\n}\r\n\r\n/**\r\n * Setting model Barbed Wire for an Obstacle\r\n * @extends Obstacle\r\n */\r\n\r\nclass BarbedWire extends Obstacle {\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this._model = 'BarbedWire';\r\n  }\r\n}\r\n\r\n/**\r\n * Setting model Woodbox for an Obstacle\r\n * @extends Obstacle\r\n */\r\nclass Woodbox extends Obstacle {\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this._model = 'Woodbox';\r\n  }\r\n}\r\n\r\nclass Board {\r\n  /**\r\n     * Create a board containing all tiles\r\n     * @param {Int} maxTiles Should be a square number 9, 16, 25, 36, 49, 64, 81..\r\n     */\r\n  constructor(maxTiles) {\r\n    this.tiles = [];\r\n    this.lineOfTiles = Math.floor(Math.sqrt(maxTiles));\r\n    for (let y = 0; y < this.lineOfTiles; ++y) {\r\n      for (let x = 0; x < this.lineOfTiles; ++x) {\r\n        const randomTileGenerator = Math.random();\r\n        if (randomTileGenerator < 0.9) {\r\n          this.tiles.push(new EmptyTile(x, y));\r\n        } else {\r\n          const randomObstacleGenerator = Math.random();\r\n          if (randomObstacleGenerator < 0.33) {\r\n            this.tiles.push(new Barrel(x, y));\r\n          } else if (randomObstacleGenerator < 0.66) {\r\n            this.tiles.push(new BarbedWire(x, y));\r\n          } else if (randomObstacleGenerator <= 1) {\r\n            this.tiles.push(new Woodbox(x, y));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Return tile object of given x Axis and Y Axis\r\n     * @param {Int} x\r\n     * @param {Int} y\r\n     */\r\n  getTile(x, y) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const elem of this.tiles) {\r\n      if (elem._x === x && elem._y === y) {\r\n        return elem;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n     * Bool, return true if an adjacent tile of given tile has a player on it\r\n     * @param {Int} playerTile  Should be index of Board class tiles[]\r\n     */\r\n  isPlayerNear(playerTile) {\r\n    let playerNear = false;\r\n    const tile = this.tiles[playerTile];\r\n    const adjacentTiles = [];\r\n    adjacentTiles.push(this.getTile(tile._x + 1, tile._y));\r\n    adjacentTiles.push(this.getTile(tile._x - 1, tile._y));\r\n    adjacentTiles.push(this.getTile(tile._x, tile._y + 1));\r\n    adjacentTiles.push(this.getTile(tile._x, tile._y - 1));\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const adjacentTile of adjacentTiles) {\r\n      if (adjacentTile !== undefined) {\r\n        if (adjacentTile._hasPlayer === 1) {\r\n          playerNear = true;\r\n          return playerNear;\r\n        }\r\n      }\r\n    }\r\n    return playerNear;\r\n  }\r\n}\r\n\r\nclass Movable extends Positionable {\r\n  /**\r\n   * Objects moving in the board\r\n   * @abstract\r\n   * @extends Positionable\r\n   * @param {Int} x x axis\r\n   * @param {Int} y y axis\r\n   */\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this.steps = [];\r\n  }\r\n\r\n  move(x, y) {\r\n    if (this._x !== x) {\r\n      this.movementPoint -= Math.abs((x - this._x));\r\n    } else if (this._y !== y) {\r\n      this.movementPoint -= Math.abs((y - this._y));\r\n    }\r\n    this.setTile(x, y);\r\n  }\r\n}\r\n\r\n\r\nclass Character extends Movable {\r\n  /**\r\n   * Create a character used by a player\r\n   * as a pawn in a board game\r\n   * @param {Int} x x axis of the char\r\n   * @param {Int} y y axis of the char\r\n   */\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this._equipedItem = {};\r\n    this.onFight = 0;\r\n    this.initProperties();\r\n    this.onFight = 0;\r\n    this._equipedItem = {\r\n      name: 'Poings',\r\n      amount: 15,\r\n    };\r\n  }\r\n\r\n  get movementPoint() {\r\n    return this._movementPoint;\r\n  }\r\n\r\n  set movementPoint(newVal) {\r\n    this._movementPoint = newVal;\r\n  }\r\n\r\n  get equipedItem() {\r\n    return this._equipedItem;\r\n  }\r\n\r\n  set equipedItem(newVal) {\r\n    this._equipedItem = Game.items[newVal];\r\n  }\r\n\r\n  /**\r\n   * Return the number of the character tile\r\n   * The number is an index of tiles array from the Board class\r\n   */\r\n  getTile() {\r\n    return this._x + (this._y * Math.floor(Math.sqrt(Game.board.tiles.length)));\r\n  }\r\n\r\n  /**\r\n   * Return x and y axis in an array\r\n   */\r\n  getPos() {\r\n    return [this._x, this._y];\r\n  }\r\n\r\n  /**\r\n   * Change the character to another given position\r\n   * @param {Int} x new x axis\r\n   * @param {Int} y new y axis\r\n   */\r\n  setTile(x, y) {\r\n    // eslint-disable-next-line max-len\r\n    if (this._x !== undefined && this._y !== undefined) Game.board.getTile(this._x, this._y)._hasPlayer = 0;\r\n    super.setTile(x, y);\r\n    const newTile = Game.board.getTile(x, y);\r\n    newTile._hasPlayer = 1;\r\n    newTile.reachable = 0;\r\n  }\r\n\r\n  /**\r\n   * Move character to another tile with setTile and actualise the movement points\r\n   * using super.move(x,y)\r\n   * @param {Int} x new x axis\r\n   * @param {Int} y new y axis\r\n   */\r\n  move(x, y) {\r\n    super.move(x, y);\r\n    this.setTile(x, y);\r\n  }\r\n\r\n  /**\r\n     * Check if player can equip this item\r\n     * @param {Int} itemIndex item index in GameManager class items[]\r\n     * @param {Int} itemTile tile where the item is\r\n     */\r\n  checkItem(itemIndex, itemTile) {\r\n    const item = Game.items[itemIndex];\r\n    const charType = [Survivor, Chaser];\r\n    if (this instanceof charType[item.targetChar - 1]) {\r\n      this.equipItem(item, itemTile);\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Equip item and remove it from the tile\r\n     * @param {Int} itemIndex item index in GameManager class items[]\r\n     * @param {Int} itemTile tile where the item is\r\n     */\r\n  equipItem(newItem, itemTile) {\r\n    const previousItem = this._equipedItem;\r\n    const previousItemIndex = Game.getItemIndex(previousItem.name);\r\n    this._equipedItem = newItem;\r\n    if (previousItem.name === 'Poings') {\r\n      // eslint-disable-next-line no-param-reassign\r\n      itemTile._hasItem = [0];\r\n    } else {\r\n      // eslint-disable-next-line no-param-reassign\r\n      itemTile._hasItem = [1, previousItemIndex];\r\n    }\r\n    return itemTile._hasItem;\r\n  }\r\n}\r\n\r\nclass Survivor extends Character {\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this.model = ['Adam'];\r\n    // eslint-disable-next-line prefer-destructuring\r\n    this.name = this.model[0];\r\n    this._movementPoint = 3;\r\n    this.defaultMovePoints = this.movementPoint;\r\n    this._health = 100;\r\n  }\r\n}\r\n\r\nclass Chaser extends Character {\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this.model = ['Billy', 'Myers', 'Clown'];\r\n    // eslint-disable-next-line prefer-destructuring\r\n    this.name = this.model[0];\r\n    this._movementPoint = 2;\r\n    this.defaultMovePoints = this.movementPoint;\r\n  }\r\n}\r\n\r\n// Logic\r\n\r\nclass Player {\r\n  /**\r\n     *\r\n     * @param {Int} number number of player, either 1 or 2\r\n     * @param {Int} desiredChar 1 = Survivor || 2 = Chaser\r\n     * @param {Int|String} desiredModel Choose skin for the character\r\n     */\r\n  constructor(number, desiredChar, desiredModel) {\r\n    this.number = number;\r\n    if (desiredChar === 1) {\r\n      this.char = new Survivor(4, 3);\r\n    } else {\r\n      this.char = new Chaser(4, 3);\r\n    }\r\n    if (desiredModel instanceof String) this.char.name = desiredModel;\r\n    else this.char.name = this.char.model[desiredModel];\r\n  }\r\n}\r\n\r\n\r\nclass Item {\r\n  /**\r\n     *\r\n     * @param {String} name Item name\r\n     * @param {Int} type Must be index - Select a type from itemsType array\r\n     * @param {Int} amount Can be amount of damages,\r\n     * heal, tile distance or movement point boost according to type\r\n     * @param {Int} targetChar Which type\r\n     * of character can use this item (Either 1 = Survivor 2 = Chaser)\r\n     */\r\n\r\n  constructor(name, type, amount, targetChar) {\r\n    this.itemsType = ['Damage', 'Healing', 'Mover', 'Boost'];\r\n    this.name = name;\r\n    this.type = this.itemsType[type];\r\n    this.amount = amount;\r\n    this.targetChar = targetChar;\r\n    switch (type) {\r\n      case 0:\r\n        this.desc = `Occasionne ${this.amount} de dommages.`;\r\n        break;\r\n      case 1:\r\n        this.desc = `Soigne ${this.amount} de points de vie.`;\r\n        break;\r\n      case 2:\r\n        switch (targetChar) {\r\n          case 1:\r\n            this.desc = `Repousse de ${this.amount} case.`;\r\n            break;\r\n          case 2:\r\n            this.desc = `Attire de ${this.amount} case.`;\r\n            break;\r\n          default:\r\n            // console.error('Le personnage ciblé est incorrect');\r\n            break;\r\n        }\r\n        break;\r\n      case 3:\r\n        this.desc = `Augmente de ${this.amount} les points de mouvement du personnage.`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    switch (targetChar) {\r\n      case 1:\r\n        this.descChar = '<span class=\\'tooltiptext--survivor\\'>Pour Survivant.</span>';\r\n        break;\r\n      case 2:\r\n        this.descChar = '<span class=\\'tooltiptext--chaser\\'>Pour Chaser.</span>';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nclass GameManager extends Observable {\r\n  /**\r\n   * Used for default variables\r\n   * @abstract\r\n   * @extends Observable\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.turn = 1;\r\n    this.initProperties();\r\n    this.playerModel = [];\r\n    this.players = [\r\n      new Player(1, 1), new Player(2, 2),\r\n    ];\r\n    this.playersAction = [];\r\n    // Define active player based on character selection\r\n    // Survivor is always starting first\r\n    this.players[0].char instanceof Survivor ? this.activePlayer = 0 : this.activePlayer = 1;\r\n    this.totalTurn = 0;\r\n    // Define turns required before survivor escape\r\n    this.escapeTurn = 9;\r\n    this.board = new Board(64);\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  /**\r\n   * Return possible models for a game mode\r\n   * Used in character selection\r\n   * @param {String} mode can either be Survival or Versus\r\n   */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  getCharModels(mode) {\r\n    if (mode === 'survival') {\r\n      const chaser = new Chaser(0, 0);\r\n      const survivor = new Survivor(0, 0);\r\n      const models = [[...chaser.model], [...survivor.model]];\r\n      return models;\r\n    }\r\n    const chaser = new Chaser(0, 0);\r\n    const models = [...chaser.model];\r\n    return models;\r\n  }\r\n\r\n  /**\r\n     * Spawn both players accross the map in random positions\r\n     */\r\n  // eslint-disable-next-line consistent-return\r\n  playerSpawn() {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const [index, elem] of this.players.entries()) {\r\n      elem.char.name = this.playerModel[index];\r\n      let randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n      // Prevent player from spawning on a player or an obstacle\r\n      while (this.board.tiles[randomTile] instanceof Obstacle\r\n        || this.board.tiles[randomTile].hasPlayer === 1) {\r\n        randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n      }\r\n\r\n      this.board.tiles[randomTile]._hasItem = [0];\r\n      elem.char.setTile(this.board.tiles[randomTile]\r\n        .getPos()[0], this.board.tiles[randomTile].getPos()[1]);\r\n      this.board.tiles[randomTile]._reachable = 0;\r\n      this.board.tiles[randomTile].hasPlayer = 1;\r\n\r\n      // Player can't spawn near another player (One tile from)\r\n      if (this.board.isPlayerNear(this.players[0].char.getTile())) {\r\n        return this.playerSpawn();\r\n      }\r\n    // console.info(elem);\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Spawn random items from GameManager items[]\r\n     */\r\n\r\n  itemSpawn() {\r\n    // Remove existant items\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const tile of this.board.tiles) {\r\n      if (tile._hasItem && tile._hasItem[0] === 1) {\r\n        tile._hasItem = [0];\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 8; ++i) {\r\n      let randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n      while (this.board.tiles[randomTile] instanceof Obstacle) {\r\n        randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n      }\r\n      while (this.board.tiles[randomTile]._hasPlayer === 1) {\r\n        randomTile = Math.floor(Math.random() * this.board.tiles.length);\r\n      }\r\n      const randomItem = Math.floor(Math.random() * this.items.length);\r\n      this.board.tiles[randomTile]._hasItem = [1, randomItem];\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get an action for the fight state\r\n     * @param {String} action  attack || defend\r\n     */\r\n  nextTurn(action) {\r\n    // IF not in fight\r\n    // reset moves\r\n    // IF fight state\r\n    // pushes actions and call nextFightTurn\r\n    if (this.players[0].char.onFight === 0) {\r\n      this.players[this.activePlayer].char\r\n        .movementPoint = this.players[this.activePlayer].char.defaultMovePoints;\r\n    } else {\r\n      const playerAction = {\r\n        player: this.activePlayer,\r\n        action,\r\n      };\r\n      this.playersAction.push(playerAction);\r\n      if (this.playersAction.length > 1) {\r\n        this.nextFightTurn();\r\n      }\r\n    }\r\n\r\n    // Change active player each end turn\r\n    this.activePlayer === 0 ? this.activePlayer = 1 : this.activePlayer = 0;\r\n\r\n    // Increase total Game turn each time both players turn ended\r\n    if (this.turn % 2 === 0 && this.totalTurn < this.escapeTurn) {\r\n      this.nextGameTurn();\r\n    }\r\n    this.turn += 1;\r\n  }\r\n\r\n  /**\r\n   * When both players have finished their turns,\r\n   * Increment the total game variable\r\n   * Used to control item respawn or event on given number of turn\r\n   */\r\n  nextGameTurn() {\r\n    this.totalTurn = this.turn / 2;\r\n    // Respawn item pool each 3 turns\r\n    if (!this.onFightState()) {\r\n      if (this.totalTurn % 3 === 0) this.itemSpawn();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show possible moves for active player\r\n   */\r\n  getPossibleMoves() {\r\n    this.removePossibleMoves();\r\n    // ANCHOR\r\n    this.possibleBottomMovesTiles = [];\r\n    this.possibleTopMovesTiles = [];\r\n    this.possibleLeftMovesTiles = [];\r\n    this.possibleRightMovesTiles = [];\r\n    this.possibleMovesIterator = [\r\n      this.possibleBottomMovesTiles,\r\n      this.possibleRightMovesTiles,\r\n      this.possibleLeftMovesTiles,\r\n      this.possibleTopMovesTiles,\r\n    ];\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const elem of this.possibleMovesIterator) {\r\n      for (let i = 1; i <= this.players[this.activePlayer].char.movementPoint; i++) {\r\n        // eslint-disable-next-line no-continue\r\n        if (elem[i - 1] instanceof Obstacle || elem[i - 2] instanceof Obstacle) continue;\r\n        if ((elem[i - 1] instanceof EmptyTile && elem[i - 1].hasPlayer === 1)\r\n        // eslint-disable-next-line no-continue\r\n        || (elem[i - 2] instanceof EmptyTile && elem[i - 2].hasPlayer === 1)) continue;\r\n        switch (elem) {\r\n          case this.possibleBottomMovesTiles:\r\n            elem[i] = this.board.getTile(this.players[this.activePlayer].char._x,\r\n              this.players[this.activePlayer].char._y + i);\r\n            break;\r\n          case this.possibleTopMovesTiles:\r\n            elem[i] = this.board.getTile(this.players[this.activePlayer].char._x,\r\n              this.players[this.activePlayer].char._y - i);\r\n            break;\r\n          case this.possibleLeftMovesTiles:\r\n            elem[i] = this.board.getTile(this.players[this.activePlayer].char._x - i,\r\n              this.players[this.activePlayer].char._y);\r\n            break;\r\n          case this.possibleRightMovesTiles:\r\n            elem[i] = this.board.getTile(this.players[this.activePlayer].char._x + i,\r\n              this.players[this.activePlayer].char._y);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    this.possibleMovesTiles = [\r\n      ...this.possibleBottomMovesTiles,\r\n      ...this.possibleLeftMovesTiles,\r\n      ...this.possibleRightMovesTiles,\r\n      ...this.possibleTopMovesTiles,\r\n    ];\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const tile of this.possibleMovesTiles) {\r\n      if (tile instanceof EmptyTile && tile.hasPlayer !== 1) {\r\n        tile.reachable = 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Reset possible moves */\r\n  removePossibleMoves() {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const tile in this.board.tiles) {\r\n      if (this.board.tiles[tile].reachable === 1) {\r\n        this.board.tiles[tile].reachable = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Check if player can enter in fight */\r\n  checkPlayersProximity() {\r\n    const selChar = this.players[0].char;\r\n    const selChar2 = this.players[1].char;\r\n    this.selCharProx = [selChar._x + 1, selChar._x - 1, selChar._y - 1, selChar._y + 1];\r\n    if (selChar._x === selChar2._x) {\r\n      if (selChar2._y === this.selCharProx[2] || selChar2._y === this.selCharProx[3]) {\r\n        this.fight();\r\n      }\r\n    } else if (selChar._y === selChar2._y) {\r\n      if (selChar2._x === this.selCharProx[0] || selChar2._x === this.selCharProx[1]) {\r\n        this.fight();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     *\r\n     * @param {String} itemQuery Name of an item\r\n     */\r\n  // eslint-disable-next-line consistent-return\r\n  getItemIndex(itemQuery) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const [index, item] of this.items.entries()) {\r\n      if (item.name === itemQuery) return index;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nclass SurvivalGameManager extends GameManager {\r\n  /**\r\n   * @extends GameManager\r\n   * Created when game mode is selected\r\n   * In survival, one player is chaser and the other one is survivor\r\n   * Chaser has to kill the survivor\r\n   * Survivor need to survive x amounts of turn to escape\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.players = [\r\n      new Player(1, 1, 0), new Player(2, 2, 1),\r\n    ];\r\n    this.items = [\r\n      new Item('Machette', 0, 20, 2),\r\n      new Item('Hachoir', 0, 10, 2),\r\n      new Item('Piege', 0, 15, 2),\r\n      new Item('Grappin', 2, 1, 2),\r\n      new Item('Skate', 3, 1, 1),\r\n      new Item('Lance-pierre', 2, 1, 1),\r\n      new Item('Bandages', 1, 10, 1),\r\n    ];\r\n    this.mode = 'survival';\r\n  }\r\n}\r\n\r\nclass VersusGameManager extends GameManager {\r\n  /**\r\n   * @extends GameManager\r\n   * Created when game mode is selected\r\n   * In versus, both players are chaser and have to fight to death\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.players = [new Player(1, 2, 0), new Player(2, 2, 2)];\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const player of this.players) {\r\n      player.char._movementPoint = 3;\r\n      player.char.defaultMovePoints = 3;\r\n      player.char._health = 100;\r\n    }\r\n    this.items = [\r\n      new Item('Machette', 0, 35, 2),\r\n      new Item('Hachoir', 0, 25, 2),\r\n      new Item('Grappin', 0, 30, 2),\r\n      new Item('Gants', 0, 20, 2),\r\n    ];\r\n    this.winner = 0;\r\n    this.mode = 'versus';\r\n\r\n  }\r\n\r\n  /**\r\n   * Initiate the fight state\r\n   */\r\n  fight() {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const player of this.players) {\r\n      player.char._movementPoint = 0;\r\n      this.removePossibleMoves();\r\n      player.char.onFight = 1;\r\n    }\r\n  }\r\n\r\n  /** Bool, return true if players are in fight state */\r\n  onFightState() {\r\n    if (this.players[0].char.onFight === 1) { return true; }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Take both actions (attack/defend) done during previous turn and execute them\r\n   */\r\n  nextFightTurn() {\r\n    const previousHealthFirstPlayer = this.players[this.playersAction[0].player].char._health;\r\n    if (this.players[this.playersAction[1].player].char._health > 0) {\r\n      if (this.players[this.playersAction[0].player].char._health > 0) {\r\n        if (this.playersAction[0].action === 'attack') {\r\n          if (this.playersAction[1].action === 'defend') {\r\n            this.players[this.playersAction[1].player].char._health\r\n              -= (this.players[this.playersAction[0].player].char._equipedItem.amount / 2);\r\n          } else {\r\n            this.players[1].char._health -= this.players[0].char._equipedItem.amount;\r\n            this.players[0].char._health -= this.players[1].char._equipedItem.amount;\r\n          }\r\n        } else if (this.playersAction[1].action === 'attack') {\r\n          this.players[this.playersAction[0].player].char._health\r\n            -= (this.players[this.playersAction[1].player].char._equipedItem.amount / 2);\r\n        }\r\n      }\r\n      this.players[this.playersAction[0].player].char\r\n        ._health = Math.floor(this.players[this.playersAction[0].player].char._health);\r\n      this.players[this.playersAction[1].player].char\r\n        ._health = Math.floor(this.players[this.playersAction[1].player].char._health);\r\n    }\r\n\r\n    // prevent health from going under 0\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const player of this.players) {\r\n      if (player.char._health < 0) {\r\n        player.char._health = 0;\r\n      }\r\n    }\r\n\r\n    // If both players die at the same time.\r\n    // first attacker wins\r\n    if (this.players[this.playersAction[1].player].char._health === 0\r\n      && this.players[this.playersAction[0].player].char._health === 0) {\r\n      this.players[this.playersAction[0].player].char._health = previousHealthFirstPlayer;\r\n    }\r\n\r\n    if (this.players[this.playersAction[1].player].char._health === 0) {\r\n      this.winner = this.playersAction[0].player + 1;\r\n    } else\r\n    if (this.players[this.playersAction[0].player].char._health === 0) {\r\n      this.winner = this.playersAction[1].player + 1;\r\n    }\r\n\r\n    // Removing actions each turn after they've been used\r\n    this.playersAction.length = 0;\r\n  }\r\n}\r\n\r\nconst Game = new VersusGameManager();\r\nexport { Game as default };\r\n"],"file":"game.js"}